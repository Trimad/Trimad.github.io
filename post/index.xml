<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hugo Grimoire</title><link>https://trimad.github.io/post/</link><description>Recent content in Posts on Hugo Grimoire</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 06 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://trimad.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Uninstall Third-Party Drivers with CMD</title><link>https://trimad.github.io/post/2023-02-06-uninstall-drivers/</link><pubDate>Mon, 06 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-06-uninstall-drivers/</guid><description>
You can uninstall third-party drivers (such as the WAVES MaxxAudio Pro driver) from the Command Prompt (CMD) by using the &amp;quot;pnputil.exe&amp;quot; utility. Here's the basic process:
Open Command Prompt as administrator: Press the Windows key + X, and then select &amp;quot;Command Prompt (Admin)&amp;quot;.
Type the following command and press Enter:
1pnputil.exe -e 2# or export the list to a file 3pnputil.exe &amp;gt; !drivers.csv This command lists all the third-party drivers installed on your system.</description></item><item><title>Stable Diffusion Scripts</title><link>https://trimad.github.io/post/2023-02-05-stable-diffusion/</link><pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-05-stable-diffusion/</guid><description>
Data Grooming Numbering PNG files in a folder in sequence 1import os 2import pathlib 3 4collection = os.getcwd() 5#print(collection) 6for i, filename in enumerate(os.listdir(collection)): 7 file_extension = pathlib.Path(filename).suffix 8 #print(&amp;#34;File Extension: &amp;#34;, file_extension) 9 if(file_extension == &amp;#34;.png&amp;#34;): 10 os.rename(collection +&amp;#34;\\&amp;#34;+ filename, collection +&amp;#34;\\&amp;#34;+ str(i).zfill(4) + &amp;#34;.png&amp;#34;) This code block is a Python script that does the following:
Imports the os and pathlib modules. Defines a variable collection which is set to the current working directory.</description></item><item><title>All About Time</title><link>https://trimad.github.io/post/2023-02-02-all-about-time/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-02-all-about-time/</guid><description>
The first command, &amp;quot;wmic path Win32_OperatingSystem get LastBootUpTime&amp;quot;, is a Windows Management Instrumentation (WMI) command that retrieves the time the operating system was last booted. The second command, &amp;quot;systeminfo | find &amp;quot;System Boot Time&amp;quot;&amp;quot;, is a Windows Command Prompt command that uses the systeminfo command to retrieve system information, which is then piped (|) to the find command to search for the specific line containing &amp;quot;System Boot Time&amp;quot;. The third command, &amp;quot;(get-date) - (gcim Win32_OperatingSystem).</description></item><item><title>Download Movie Streams</title><link>https://trimad.github.io/post/2022-06-09-download-movie-streams/</link><pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-06-09-download-movie-streams/</guid><description>
This is my tentative work flow for downloading movie streams online. The gist of what I've learned about this process is that every HTTP Live Stream (HLS) begins with an .m3u8 playlist with a MIME type of x-mpegURL or vnd.apple.mpegURL. This playlist lists a series of .ts files that are streamed one at a time and decoded so your browser is not burdened with downloading the entire movie every time you refresh the page.</description></item><item><title>Logistic Map</title><link>https://trimad.github.io/post/2022-05-14-logistic-map/2022-05-14-logistic-map/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-05-14-logistic-map/2022-05-14-logistic-map/</guid><description>
hell yeah dude
Repository for code that generated this fractal: https://github.com/Trimad/Sandbox</description></item><item><title>Archimedean Spiral</title><link>https://trimad.github.io/post/2022-05-04-archimedean-spiral/</link><pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-05-04-archimedean-spiral/</guid><description>
Edit This Sketch This sketch draws an Archimedean Spiral using polar coordinates. If the &amp;quot;EXPORT&amp;quot; variable is true, the sketch will spit-out an SVG file of the drawn spiral. My motivation for making this was so I could cut-out a spiral with my wife's Cricut Maker and hang something more interesting above my son's bassinet than empty white ceiling.
Example SVG files {: width=&amp;quot;auto&amp;quot; height=&amp;quot;auto&amp;quot; }
{: width=&amp;quot;auto&amp;quot; height=&amp;quot;auto&amp;quot; }</description></item><item><title>rundll32</title><link>https://trimad.github.io/post/2022-04-21-rundll32/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-04-21-rundll32/</guid><description>
Loads and runs 32-bit dynamic-link libraries (DLLs). You must run the rundll32 command from an elevated command prompt. To open an elevated command prompt, click Start, right-click Command Prompt, and then click Run as administrator.
Make Windows beep ```console rundll32 user32.dll, MessageBeep ``` Lock Workstation ```console rundll32 user32.dll, LockWorkStation ``` Put Workstation to sleep ```console rundll32 powrprof.dll, SetSuspendState Sleep ``` Microsoft Reference ss64.com Reference</description></item><item><title>youtube-dl</title><link>https://trimad.github.io/post/2022-04-16-youtube-dl/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-04-16-youtube-dl/</guid><description>
youtube-dl is a command-line program that allows users to download videos from YouTube and other video-sharing websites. The program is open-source and can be used on a variety of operating systems, including Windows, Mac, and Linux. It can download videos in a variety of formats, including MP4, FLV, and 3GP, and can also extract audio from videos as MP3 or other audio formats. Additionally, youtube-dl can be used to download videos from other websites like Vimeo, Dailymotion, and more.</description></item><item><title>Dump WiFi Passwords</title><link>https://trimad.github.io/post/2022-04-11-dump-wifi-passwords/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-04-11-dump-wifi-passwords/</guid><description>
This script uses the Windows command-line tool &amp;quot;netsh&amp;quot; to retrieve information about wireless network profiles that have been previously connected to on the computer. It then parses the information to extract the SSID (name) and password for each profile, and outputs that information to a CSV file named &amp;quot;output.csv&amp;quot;. Finally, the script opens the &amp;quot;output.csv&amp;quot; file.
The script uses the &amp;quot;Invoke-Item&amp;quot; command to open the &amp;quot;output.csv&amp;quot; file, which is the PowerShell command equivalent of double-clicking on a file in Windows Explorer.</description></item><item><title>ffmpeg</title><link>https://trimad.github.io/post/2023-02-05-ffmpeg/</link><pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-05-ffmpeg/</guid><description>
ffmpeg is a complete, cross-platform solution to record, convert and stream audio and video.
ffmpeg Download ffmpeg Documentation Audio Processing Convert to 8kHz, single-channel PCM 1ffmpeg -i &amp;#34;input.mp3&amp;#34; -ar 8000 -ac 1 output.wav Convert to 16kHz, single-channel PCM 1ffmpeg -i &amp;#34;input.mp3&amp;#34; -ar 16000 -ac 1 output.wav Convert to 48kHz, single-channel PCM 1ffmpeg -i input.mp3 -ar 48000 -ac 1 output.wav Video Processing Add Music to a Video 1ffmpeg -i video.mp4 -i music.</description></item><item><title>k-means Clustering</title><link>https://trimad.github.io/post/2021-05-18-k-means-clustering/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2021-05-18-k-means-clustering/</guid><description>
Wikipedia k-means clustering is a method of vector quantization, originally from signal processing, that aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean (cluster centers or cluster centroid), serving as a prototype of the cluster. This results in a partitioning of the data space into Voronoi cells.
GitHub repository: https://github.com/Trimad/k-means-clustering</description></item><item><title>Barnsley Fern</title><link>https://trimad.github.io/post/2018-06-28-barnsley-fern/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2018-06-28-barnsley-fern/</guid><description>
hell yeah dude 1float x = 0; 2float y = 0; 3 4float[][] magicX = { 5 {0.00, 0.00}, 6 {0.85, 0.04}, 7 {0.20, -0.26}, 8 {-0.15, 0.28} 9}; 10 11float[][] magicY = { 12 {0.16, 0.00, 0.00}, 13 {-0.04, 0.85, 1.6}, 14 {0.23, 0.22, 1.6}, 15 {0.26, 0.24, 0.44} 16}; 17 18//PGraphics pg; 19 20int iterations = 123456; 21 22void setup() { 23 //fullScreen(P3D); 24 size(2048, 2048, P3D); 25 background(0); 26 histogram = new int[width][height]; 27 //pg = createGraphics(width*2, height*2); 28 //pg.</description></item><item><title>Kattis Challenge "Line Them Up"</title><link>https://trimad.github.io/post/2017-08-18-kattis-line-them-up/</link><pubDate>Fri, 18 Aug 2017 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2017-08-18-kattis-line-them-up/</guid><description>
The Challenge My solution</description></item><item><title>Kattis Challenge "Server"</title><link>https://trimad.github.io/post/2017-08-18-kattis-server/</link><pubDate>Fri, 18 Aug 2017 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2017-08-18-kattis-server/</guid><description>
The Challenge My solution</description></item><item><title>Kattis Challenge "A Different Problem"</title><link>https://trimad.github.io/post/2017-08-15-kattis-different/</link><pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2017-08-15-kattis-different/</guid><description>
The Challenge My solution</description></item><item><title>Simple 2D Terrain Generation Using Perlin Noise</title><link>https://trimad.github.io/post/2017-07-16-simple-2d-perlin-noise/</link><pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2017-07-16-simple-2d-perlin-noise/</guid><description>
click mouse in iframe to generate a new map This sketch maps perlin noise between a value of 0 and 255 across a grid. Values greater than or equal to 100 are "grass", values between 75 and 100 are "sand", and values less than or equal to 75 are "water". Click here to render a fullscreen map Launch the p5.js editor</description></item><item><title>Arrays</title><link>https://trimad.github.io/post/2016-12-13-arrays/</link><pubDate>Tue, 13 Dec 2016 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2016-12-13-arrays/</guid><description>
View Fullscreen View In p5.js Editor Click on them circles homes</description></item></channel></rss>