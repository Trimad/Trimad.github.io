<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Hugo Grimoire</title><link>https://trimad.github.io/tags/python/</link><description>Recent content in Python on Hugo Grimoire</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 05 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://trimad.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Local AI API</title><link>https://trimad.github.io/post/2024-02-05-local-ai-api/</link><pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2024-02-05-local-ai-api/</guid><description>
ITT Model Repository: Moondream on GitHub
1git clone https://github.com/vikhyat/moondream.git 2cd moondream 3python -m venv venv 4venv\Scripts\activate 5pip install -r requirements.txt 6pip install flask Code 1from flask import Flask, request, jsonify 2import torch 3from PIL import Image 4from io import BytesIO 5from moondream import Moondream, detect_device 6from transformers import CodeGenTokenizerFast as Tokenizer 7 8app = Flask(__name__) 9 10# Initialize the model 11model_id = &amp;#34;vikhyatk/moondream1&amp;#34; 12tokenizer = Tokenizer.from_pretrained(model_id) 13device, dtype = detect_device() 14moondream = Moondream.</description></item><item><title>Generate Knowledge Graphs with LLMs</title><link>https://trimad.github.io/post/2023-12-14-pyvis-knowledge-graphs/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-12-14-pyvis-knowledge-graphs/</guid><description>
This is a work in progress exploration of generating knowledge graphs with LLMs, inspired by a post I read on towardsdatascience.com.</description></item><item><title>local-llm</title><link>https://trimad.github.io/post/2023-10-17-local-llm/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-10-17-local-llm/</guid><description>
TheraFit is a personal project and Large Language Model approach to matching clients to therapists.
Environment Setup Clone the Git repository.
1git clone https://github.com/Trimad/TheraFit Install Miniconda.
Create the environment 1conda create --name local-llm python=3.11.4 --channel conda-forge 1conda activate local-llm Install pip requirements 1pip3 install -r requirements.txt Install the Windows version of bitsandbytes 1python -m pip install bitsandbytes --prefer-binary --extra-index-url=https://jllllll.github.io/bitsandbytes-windows-webui Force reinstall torch until it works 1pip3 install torch torchvision torchaudio --index-url https://download.</description></item><item><title>TheraFit</title><link>https://trimad.github.io/post/2023-03-28-therafit/</link><pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-03-28-therafit/</guid><description>
TheraFit is a personal project and Large Language Model approach to matching clients to therapists.</description></item></channel></rss>