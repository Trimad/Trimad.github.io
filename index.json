[{"body":"","link":"https://trimad.github.io/","section":"","tags":null,"title":""},{"body":"","link":"https://trimad.github.io/categories/azure/","section":"categories","tags":null,"title":"Azure"},{"body":"","link":"https://trimad.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"This PowerShell script performs the following actions:\nIt retrieves the Windows identity and security principal of the current user account. It then retrieves the security principal for the Administrator role. It checks if the current user is running as an administrator. If the user is not running as an administrator, the script relaunches itself as an elevated process. If the user is running as an administrator, the script displays a menu with three options: \u0026quot;Delta Sync\u0026quot;, \u0026quot;Full Sync\u0026quot;, and \u0026quot;Exit\u0026quot;. The user is prompted to select an option by entering the corresponding number. Based on the user's selection, the script runs the appropriate command using the Start-ADSyncSyncCycle cmdlet with either the Delta or Initial policy type. If the user selects \u0026quot;Exit\u0026quot;, the script exits. Finally, the script displays a message indicating that it is running and to check the \u0026quot;miisclient\u0026quot; to confirm. It then pauses for 10 seconds using the Start-Sleep cmdlet. 1$myWindowsID = [System.Security.Principal.WindowsIdentity]::GetCurrent() 2$myWindowsPrincipal = New-Object System.Security.Principal.WindowsPrincipal($myWindowsID) 3$adminRole = [System.Security.Principal.WindowsBuiltInRole]::Administrator 4 5if (-not $myWindowsPrincipal.IsInRole($adminRole)) { 6 $newProcess = New-Object System.Diagnostics.ProcessStartInfo \u0026#34;PowerShell\u0026#34; 7 $newProcess.Arguments = $myInvocation.MyCommand.Definition 8 $newProcess.Verb = \u0026#34;runas\u0026#34; 9 [System.Diagnostics.Process]::Start($newProcess) 10 exit 11} 12 13Write-Host \u0026#39;1) Delta Sync (Recommended, unless told to do a full sync)\u0026#39; 14Write-Host \u0026#39;2) Full Sync\u0026#39; 15Write-Host \u0026#39;3) Exit\u0026#39; 16 17$selected_menu_item = Read-Host \u0026#39;Which number would you like to run (1 or 2)? (Enter Number and Press Enter)\u0026#39; 18 19switch ($selected_menu_item) { 20 1 { Start-ADSyncSyncCycle -PolicyType Delta } 21 2 { Start-ADSyncSyncCycle -PolicyType Initial } 22 3 { Write-Host \u0026#39;Exit\u0026#39;; exit } 23 default { Write-Host \u0026#39;Incorrect Input\u0026#39; -ForegroundColor Red } 24} 25 26Write-Host \u0026#39;Running Now.... Check miisclient to confirm\u0026#39; 27Start-Sleep -s 10 ","link":"https://trimad.github.io/post/2023-09-92-force-ad-sync/","section":"post","tags":["sync"],"title":"Force domain controller to sync with AzureAD"},{"body":"","link":"https://trimad.github.io/categories/m365/","section":"categories","tags":null,"title":"M365"},{"body":"","link":"https://trimad.github.io/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://trimad.github.io/categories/powershell/","section":"categories","tags":null,"title":"PowerShell"},{"body":"","link":"https://trimad.github.io/tags/sync/","section":"tags","tags":null,"title":"sync"},{"body":"","link":"https://trimad.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://trimad.github.io/categories/exchangeonlinemanagement/","section":"categories","tags":null,"title":"ExchangeOnlineManagement"},{"body":"","link":"https://trimad.github.io/tags/hard-delete/","section":"tags","tags":null,"title":"hard delete"},{"body":"","link":"https://trimad.github.io/categories/o365/","section":"categories","tags":null,"title":"O365"},{"body":"","link":"https://trimad.github.io/tags/purge/","section":"tags","tags":null,"title":"purge"},{"body":"Content Search https://compliance.microsoft.com/contentsearchv2?viewid=search Purge 1# Import the Exchange Online Management module into the current PowerShell sessionand establish a connection to Exchange Online using the specified User Principal Name (UPN) 2Import-Module ExchangeOnlineManagement 3Connect-IPPSSession -UserPrincipalName admin@thecompany.org 4 5# Performed a \u0026#34;hard delete\u0026#34; of phishing emails 6New-ComplianceSearchAction -SearchName \u0026#34;name_of_content_search\u0026#34; -Purge -PurgeType HardDelete 7 8# Checked status of compliance serach action: 9Get-ComplianceSearchAction -Identity \u0026#34;name_of_content_search_Purge\u0026#34; | Format-List ","link":"https://trimad.github.io/post/2023-02-07-purge-emails/","section":"post","tags":["purge","hard delete"],"title":"Purge emails with ExchangeOnlineManagement"},{"body":"","link":"https://trimad.github.io/tags/cmd/","section":"tags","tags":null,"title":"CMD"},{"body":"","link":"https://trimad.github.io/categories/cmd/","section":"categories","tags":null,"title":"CMD"},{"body":"","link":"https://trimad.github.io/tags/drivers/","section":"tags","tags":null,"title":"drivers"},{"body":"You can uninstall third-party drivers (such as the WAVES MaxxAudio Pro driver) from the Command Prompt (CMD) by using the \u0026quot;pnputil.exe\u0026quot; utility. Here's the basic process:\nOpen Command Prompt as administrator: Press the Windows key + X, and then select \u0026quot;Command Prompt (Admin)\u0026quot;.\nType the following command and press Enter:\n1pnputil.exe -e 2# or export the list to a file 3pnputil.exe \u0026gt; !drivers.csv This command lists all the third-party drivers installed on your system.\nLocate the driver in the list and make note of its INF file name (e.g. oemXXX.inf).\nType the following command and press Enter, replacing \u0026quot;INF_file_name\u0026quot; with the actual INF file name you noted in step 3:\n1pnputil.exe -d INF_file_name 2# e.g. pnputil.exe -d oem72.inf This command uninstalls the driver.\nRestart your computer to complete the uninstallation process.\n","link":"https://trimad.github.io/post/2023-02-06-uninstall-drivers/","section":"post","tags":["CMD","drivers"],"title":"Uninstall Third-Party Drivers with CMD"},{"body":"","link":"https://trimad.github.io/tags/ai/","section":"tags","tags":null,"title":"ai"},{"body":"","link":"https://trimad.github.io/categories/depth-map/","section":"categories","tags":null,"title":"Depth Map"},{"body":"FILM GitHub Setup GPU environment The Windows setup instructions in the GitHub repository are wrong or outdated. Tensorflow kept trying to use the CPU instead of the GPU until I installed CUDA and CUDNN this way: 1conda install -c conda-forge cudatoolkit=11.2 cudnn=8.1.0 2python -m pip install \u0026#34;tensorflow\u0026lt;2.11\u0026#34; 3pip install protobuf==3.20.3 Usage Activate the Conda environment\n1conda activate frame_interpolation From the Conda Shell, cd to the FILM directory\n1cd C:\\Users\\trima\\frame-interpolation Place the images you would like to interpolate in the \u0026quot;photos\u0026quot; directory and run this command to begin interpolating them.\n1python -m eval.interpolator_cli --pattern \u0026#34;photos\u0026#34; --model_path pretrained_models\\film_net\\Style\\saved_model --times_to_interpolate 1 --output_video ","link":"https://trimad.github.io/post/2023-02-10-film/","section":"post","tags":["ai","image processing"],"title":"FILM"},{"body":"","link":"https://trimad.github.io/tags/image-processing/","section":"tags","tags":null,"title":"image processing"},{"body":"","link":"https://trimad.github.io/categories/interpolation/","section":"categories","tags":null,"title":"Interpolation"},{"body":"MiDaS GitHub During installation, I ran into an issue where the CUDA package wasn't found. Had to modify environment.yaml to:\n1name: midas-py310 2channels: 3 - pytorch 4 - defaults 5dependencies: 6 - nvidia::cuda-toolkit=11.7.0 7 - python=3.10.8 8 - pytorch::pytorch=1.13.0 9 - torchvision=0.14.0 10 - pip=22.3.1 11 - numpy=1.23.4 12 - pip: 13 - opencv-python==4.6.0.66 14 - imutils==0.5.4 15 - timm==0.6.12 16 - einops==0.6.0 Commands that were helpful for troubleshooting CUDA:\n1conda list env 2conda env remove -n midas-py310 3python -m torch.utils.collect_env 4nvidia-smi 5conda install cudatoolkit 1conda install -c \u0026#34;nvidia/label/cuda-11.7.0\u0026#34; cuda-toolkit Activate the Conda environment 1conda activate midas-py310 Run MiDaS From the Conda Shell, cd to the MiDaS directory 1cd C:\\Users\\trima\\MiDaS Place the image frames you would like to interpolate in the \u0026quot;input\u0026quot; directory and run one of the following commands:\n1# dpt_beit_large_512 2python run.py --model_type dpt_beit_large_512 --input_path input --output_path output --grayscale --optimize 3# dpt_swin2_large_384 4python run.py --model_type dpt_swin2_large_384 --input_path input --output_path output --grayscale --optimize 5# dpt_swin2_tiny_256 6python run.py --model_type dpt_swin2_tiny_256 --input_path input --output_path output --grayscale --optimize For \u0026quot;inferno\u0026quot; color mapping, omit the --grayscale flag.\n","link":"https://trimad.github.io/post/2023-02-10-midas/","section":"post","tags":["ai","image processing"],"title":"MiDaS"},{"body":"","link":"https://trimad.github.io/categories/stable-diffusion/","section":"categories","tags":null,"title":"Stable Diffusion"},{"body":"Data Grooming Numbering PNG files in a folder in sequence 1import os 2import pathlib 3 4collection = os.getcwd() 5for i, filename in enumerate(os.listdir(collection)): 6 file_extension = pathlib.Path(filename).suffix 7 if file_extension == \u0026#34;.png\u0026#34;: 8 new_filename = f\u0026#34;{str(i).zfill(4)}.png\u0026#34; 9 old_path = os.path.join(collection, filename) 10 new_path = os.path.join(collection, new_filename) 11 os.rename(old_path, new_path) This code block is a Python script that does the following:\nImports the os and pathlib modules. Defines a variable collection which is set to the current working directory. Iterates through all files in the current working directory using os.listdir(collection) and enumerate() function For each file, it gets the file extension using the pathlib.Path(filename).suffix method If the file extension is \u0026quot;.png\u0026quot;, it renames the file using os.rename() function. The new file name is a zero-padded four digit number, followed by \u0026quot;.png\u0026quot;. The script is changing the name of all png files in the current working directory to a 4 digit zero padded number followed by .png, this is useful if you have a sequence of files in a folder and you want to sort them in order and not have any gaps in the numbering. Distance Sort 1import os 2from PIL import Image 3from math import sqrt 4 5folder_path = \u0026#39;C:/Users/trima/FILM/photos\u0026#39; 6image_files = os.listdir(folder_path) 7 8# Open the first image and get its RGB values 9first_image = Image.open(os.path.join(folder_path, image_files[0])) 10first_image_rgb = first_image.getdata() 11 12# Create a list to store the distances 13distances = [] 14 15# Iterate over the remaining images in the folder 16for image_file in image_files[1:]: 17 if image_file.endswith(\u0026#39;.png\u0026#39;): 18 image = Image.open(os.path.join(folder_path, image_file)) 19 image_rgb = image.getdata() 20 distance = 0 21 for i in range(len(first_image_rgb)): 22 distance += sqrt((first_image_rgb[i][0]-image_rgb[i][0])**2 + (first_image_rgb[i][1]-image_rgb[i][1])**2 + (first_image_rgb[i][2]-image_rgb[i][2])**2) 23 print((distance, image_file)) 24 distances.append((distance, image_file)) 25 26# Sort the distances list by distance 27distances.sort() 28 29# Rename the first image to \u0026#34;0000.png\u0026#34; 30os.rename(os.path.join(folder_path, image_files[0]), os.path.join(folder_path, \u0026#34;0000.png\u0026#34;)) 31 32# Rename each image to the next number in the sequence 33for i in range(len(distances)): 34 os.rename(os.path.join(folder_path, distances[i][1]), os.path.join(folder_path, str(i+1).zfill(4) + \u0026#39;.png\u0026#39;)) This script is a Python script that renames a sequence of PNG images in a folder based on the distance of their RGB values from the RGB values of the first image in the sequence. The script imports the os, PIL and math modules, it sets the folder path where the images are located and get the list of all files in that folder. It opens the first image and gets its RGB values, then creates an empty list to store the distances. It iterates over the remaining images in the folder, if the file is a png it opens the image and gets its RGB values. Then it calculates the distance between the RGB values of the current image and the first image using the Euclidean distance formula, appends the distance and the image name to the distance list. The script then sorts the distance list by the distance, renames the first image to \u0026quot;0000.png\u0026quot; and renames each image to the next number in the sequence using the os.rename() function, and 4 digits zero-padded number followed by the extension.\nColor Grading By Mean 1import os 2import cv2 3import numpy as np 4 5def average_color_grading(folder_path): 6 # Get all image filenames in the folder 7 filenames = [f for f in os.listdir(folder_path) if f.endswith(\u0026#39;.jpg\u0026#39;) or f.endswith(\u0026#39;.png\u0026#39;)] 8 9 # Initialize a sum of color grading for all images 10 color_grading_sum = None 11 12 # Iterate through all images, adding each image\u0026#39;s color grading to the sum 13 for filename in filenames: 14 print(\u0026#34;averaging \u0026#34; + filename) 15 image_path = os.path.join(folder_path, filename) 16 image = cv2.imread(image_path) 17 18 # Average color grading of an image is computed as mean of its pixels 19 color_grading = np.mean(image, axis=(0, 1)) 20 21 # Add the color grading of the current image to the sum 22 if color_grading_sum is None: 23 color_grading_sum = color_grading 24 else: 25 color_grading_sum += color_grading 26 27 # Divide the sum of color grading by the number of images to get the average color grading 28 average_color_grading = color_grading_sum / len(filenames) 29 30 return average_color_grading 31 32def apply_color_grading(folder_path, average_color_grading): 33 # Get all image filenames in the folder 34 filenames = [f for f in os.listdir(folder_path) if f.endswith(\u0026#39;.jpg\u0026#39;) or f.endswith(\u0026#39;.png\u0026#39;)] 35 36 # Create a new folder to save the color graded frames 37 color_graded_folder = os.path.join(folder_path, \u0026#39;color_graded\u0026#39;) 38 os.makedirs(color_graded_folder, exist_ok=True) 39 40 # Iterate through all images, applying the average color grading to each frame 41 for i, filename in enumerate(filenames): 42 print(\u0026#34;color grading \u0026#34; + filename) 43 image_path = os.path.join(folder_path, filename) 44 image = cv2.imread(image_path) 45 46 # Subtract the average color grading from each pixel to apply the color grading 47 color_graded_image = image - np.mean(image, axis=(0, 1)) + average_color_grading 48 49 # Zero-pad the sequential number and save the color graded image with the zero-padded sequential number 50 color_graded_image_path = os.path.join(color_graded_folder, str(i).zfill(len(str(len(filenames)))) + \u0026#39;.jpg\u0026#39;) 51 cv2.imwrite(color_graded_image_path, color_graded_image) 52 53folder_path = \u0026#39;images\u0026#39; 54average_color_grading = average_color_grading(folder_path) 55apply_color_grading(folder_path, average_color_grading) This program applies color grading to a set of images stored in the \u0026quot;images\u0026quot; folder. It does so by first computing the average color grading of all the images and then subtracting the average color grading from each pixel of each image and adding the average color grading. The resulting color graded images are saved in a new folder called \u0026quot;color_graded\u0026quot; within the \u0026quot;images\u0026quot; folder. It applies the average color grading to each frame by subtracting the mean of each frame's pixels from each pixel and adding the average color grading.\nGenerate CFG values for X/Y plot 1let frames = 60; 2let str = \u0026#34;\u0026#34;; 3function setup() { 4 noLoop(); 5 for (let i = 0; i \u0026lt;= frames; i++) { 6 let x = map(i, 0, frames, 6, 9); 7 str += nf(x,1,2); 8 str += i \u0026lt; frames ? \u0026#34;, \u0026#34; : \u0026#34;\u0026#34;; 9 } 10 print(str); 11} Delete every other frame 1import os 2 3# get the current working directory 4cwd = os.getcwd() 5 6# get a list of all the files in the directory 7files = os.listdir(cwd) 8 9# loop through the list of files 10for i, file in enumerate(files): 11 # check if the file is an image file 12 if file.endswith(\u0026#39;.jpg\u0026#39;) or file.endswith(\u0026#39;.jpeg\u0026#39;) or file.endswith(\u0026#39;.png\u0026#39;): 13 # delete every other image file 14 if i % 2 == 1: 15 os.remove(file) Add a vignette fade Fades from bottom to top. Great for hiding mistakes and artifacts.\n1from PIL import Image 2import os 3import threading 4 5# Get the directory where the script is located 6script_dir = os.path.dirname(os.path.abspath(__file__)) 7 8class VignetteThread(threading.Thread): 9 def __init__(self, filename): 10 threading.Thread.__init__(self) 11 self.filename = filename 12 13 def run(self): 14 # Open the image file 15 image = Image.open(os.path.join(script_dir, self.filename)) 16 17 # Define the size of the vignette black fade 18 fade_height = 256 19 20 # Create a black mask with the same size as the image 21 mask = Image.new(\u0026#34;L\u0026#34;, image.size, 255) 22 23 # Draw a linear gradient from white to black on the mask 24 for y in range(image.size[1] - fade_height, image.size[1]): 25 alpha = int(255 * (y - (image.size[1] - fade_height)) / fade_height) 26 mask.paste(255 - alpha, (0, y, image.size[0], y+1)) 27 28 # Apply the mask to the image 29 image.putalpha(mask) 30 31 # Save the modified image with a new filename 32 new_filename = os.path.splitext(self.filename)[0] + \u0026#34;_vignette.png\u0026#34; 33 image.save(os.path.join(script_dir, new_filename)) 34 35# Loop through each file in the directory and create a thread for each image 36threads = [] 37for filename in os.listdir(script_dir): 38 if filename.endswith(\u0026#34;.jpg\u0026#34;) or filename.endswith(\u0026#34;.png\u0026#34;): 39 thread = VignetteThread(filename) 40 threads.append(thread) 41 thread.start() 42 43# Wait for all threads to complete 44for thread in threads: 45 thread.join() ","link":"https://trimad.github.io/post/2023-02-05-stable-diffusion/","section":"post","tags":["ai","image processing"],"title":"Stable Diffusion Scripts"},{"body":"The first command, \u0026quot;wmic path Win32_OperatingSystem get LastBootUpTime\u0026quot;, is a Windows Management Instrumentation (WMI) command that retrieves the time the operating system was last booted. The second command, \u0026quot;systeminfo | find \u0026quot;System Boot Time\u0026quot;\u0026quot;, is a Windows Command Prompt command that uses the systeminfo command to retrieve system information, which is then piped (|) to the find command to search for the specific line containing \u0026quot;System Boot Time\u0026quot;. The third command, \u0026quot;(get-date) - (gcim Win32_OperatingSystem).LastBootUpTime\u0026quot;, is a PowerShell command that calculates the elapsed time since the last system boot by subtracting the value of LastBootUpTime retrieved from the WMI class \u0026quot;Win32_OperatingSystem\u0026quot; using the Get-CIMInstance (gcim) cmdlet from the current date obtained using the Get-Date cmdlet.\nwmic method 1wmic path Win32_OperatingSystem get LastBootUpTime systeminfo method 1systeminfo | find \u0026#34;System Boot Time\u0026#34; Win32_OperatingSystem method 1(get-date) - (gcim Win32_OperatingSystem).LastBootUpTime 1powershell.exe -c \u0026#34;(get-date) - (gcim Win32_OperatingSystem).LastBootUpTime\u0026#34; ","link":"https://trimad.github.io/post/2023-02-02-all-about-time/","section":"post","tags":["time","windows"],"title":"All About Time"},{"body":"","link":"https://trimad.github.io/tags/time/","section":"tags","tags":null,"title":"time"},{"body":"","link":"https://trimad.github.io/tags/windows/","section":"tags","tags":null,"title":"windows"},{"body":"riverrun, past Eve and Adam's, from swerve of shore to bend of bay, brings us by a commodius vicus of recirculation back to Howth Castle and Environs. Sir Tristram, violer d'amores, fr'over the short sea, had passen- core rearrived from North Armorica on this side the scraggy isthmus of Europe Minor to wielderfight his penisolate war: nor had topsawyer's rocks by the stream Oconee exaggerated themselse to Laurens County's gorgios while they went doublin their mumper all the time: nor avoice from afire bellowsed mishe mishe to tauftauf thuartpeatrick: not yet, though venissoon after, had a kidscad buttended a bland old isaac: not yet, though all's fair in vanessy, were sosie sesthers wroth with twone nathandjoe. Rot a peck of pa's malt had Jhem or Shen brewed by arclight and rory end to the regginbrow was to be seen ringsome on the aquaface. The fall (bababadalgharaghtakamminarronnkonnbronntonner- ronntuonnthunntrovarrhounawnskawntoohoohoordenenthur- nuk!) of a once wallstrait oldparr is retaled early in bed and later on life down through all christian minstrelsy. The great fall of the offwall entailed at such short notice the pftjschute of Finnegan, erse solid man, that the humptyhillhead of humself prumptly sends an unquiring one well to the west in quest of his tumptytumtoes: and their upturnpikepointandplace is at the knock out in the park where oranges have been laid to rust upon the green since dev- linsfirst loved livvy.\n","link":"https://trimad.github.io/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://trimad.github.io/tags/download/","section":"tags","tags":null,"title":"download"},{"body":"","link":"https://trimad.github.io/categories/download/","section":"categories","tags":null,"title":"download"},{"body":"This is my tentative work flow for downloading movie streams online. The gist of what I've learned about this process is that every HTTP Live Stream (HLS) begins with an .m3u8 playlist with a MIME type of x-mpegURL or vnd.apple.mpegURL. This playlist lists a series of .ts files that are streamed one at a time and decoded so your browser is not burdened with downloading the entire movie every time you refresh the page. These .ts files can also be aggregated and assembled into a video.\nFinding the Playlist `.m3u8` playlists load at the very beginning of the stream and are easy to spot in Firefox Developer Edition. Navigate to the stream, press F12, click on the \"Network\" tab and refresh the page. In this first example we see the .m3u8 playlist referred to as a Manifest. It sticks out in Firefox Developer Edition because the MIME type is vnd.apple.mpegURL. In Edge or Chrome this type will be something nondescript for some reason and the playlist will be much harder to spot. Right-click on the GET request for the playlist copy the URL, and you will have something like this:\n1https://cdn-ce21media.streaming.mediaservices.windows.net/REDACTED/20220518_day1dbt_baxermusser8460.ism/QualityLevels(1194234)/Manifest(video,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56) You'll know you're on the right track if you open a downloaded .m3u8 file in Notepad++ and it looks something like this:\n1#EXTM3U 2#EXT-X-VERSION:3 3#EXT-X-PLAYLIST-TYPE:VOD 4#EXT-X-ALLOW-CACHE:NO 5#EXT-X-MEDIA-SEQUENCE:0 6#EXT-X-TARGETDURATION:6 7#EXT-X-PROGRAM-DATE-TIME:1970-01-01T00:00:00Z 8#EXTINF:6.000000,no-desc 9Fragments(video=0,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56) 10#EXTINF:6.000000,no-desc 11Fragments(video=60000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56) 12#EXTINF:6.000000,no-desc 13Fragments(video=120000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56) 14#EXTINF:6.000000,no-desc 15Fragments(video=180000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56) 16#EXTINF:6.000000,no-desc 17 18... 19 20Fragments(video=249540000000,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56) 21#EXT-X-ENDLIST This URL can then be fed into ffmpeg like so and you will have successfully downloaded the stream:\n1ffmpeg -i \u0026#34;https://cdn-ce21media.streaming.mediaservices.windows.net/REDACTED/20220518_day1dbt_baxermusser8460.ism/QualityLevels(1194234)/Manifest(video,format=m3u8-aapl-v3,audiotrack=aac_UND_2_56)\u0026#34; movie.mp4 Here is an example of a stream that the content host was trying to protect. The file is plainly named v.m3u8 and the MIME type is vnd.apple.mpegURL. However, when we look at the playlist itself the fragments are obfuscated as .jpg files.\n1#EXTM3U 2#EXT-X-VERSION:3 3#EXT-X-MEDIA-SEQUENCE:0 4#EXT-X-ALLOW-CACHE:YES 5#EXT-X-TARGETDURATION:4 6#EXTINF:3.083333, 70000.jpg 8#EXTINF:3.000000, 90001.jpg 10#EXTINF:3.000000, 110002.jpg 12#EXTINF:3.000000, 130003.jpg 14#EXTINF:3.000000, 150004.jpg 16#EXTINF:3.000000, 170005.jpg 18#EXTINF:3.000000, 190006.jpg 20#EXTINF:3.000000, 210007.jpg 22 23... 24 25#EXTINF:2.250000, 261898.jpg 27#EXT-X-ENDLIST ","link":"https://trimad.github.io/post/2022-06-09-download-movie-streams/","section":"post","tags":["download","ffmpeg"],"title":"Download Movie Streams"},{"body":"","link":"https://trimad.github.io/tags/ffmpeg/","section":"tags","tags":null,"title":"ffmpeg"},{"body":"","link":"https://trimad.github.io/categories/video/","section":"categories","tags":null,"title":"video"},{"body":"","link":"https://trimad.github.io/tags/fractal/","section":"tags","tags":null,"title":"fractal"},{"body":"","link":"https://trimad.github.io/categories/java/","section":"categories","tags":null,"title":"Java"},{"body":"hell yeah dude\nRepository for code that generated this fractal: https://github.com/Trimad/Sandbox\n","link":"https://trimad.github.io/post/2022-05-14-logistic-map/2022-05-14-logistic-map/","section":"post","tags":["fractal"],"title":"Logistic Map"},{"body":"","link":"https://trimad.github.io/categories/processing/","section":"categories","tags":null,"title":"Processing"},{"body":" Edit This Sketch This sketch draws an Archimedean Spiral using polar coordinates. If the \u0026quot;EXPORT\u0026quot; variable is true, the sketch will spit-out an SVG file of the drawn spiral. My motivation for making this was so I could cut-out a spiral with my wife's Cricut Maker and hang something more interesting above my son's bassinet than empty white ceiling.\nExample SVG files {: width=\u0026quot;auto\u0026quot; height=\u0026quot;auto\u0026quot; }\n{: width=\u0026quot;auto\u0026quot; height=\u0026quot;auto\u0026quot; }\n{: width=\u0026quot;auto\u0026quot; height=\u0026quot;auto\u0026quot; }\n","link":"https://trimad.github.io/post/2022-05-04-archimedean-spiral/","section":"post","tags":["spiral","interactive"],"title":"Archimedean Spiral"},{"body":"","link":"https://trimad.github.io/tags/interactive/","section":"tags","tags":null,"title":"interactive"},{"body":"","link":"https://trimad.github.io/categories/javascript/","section":"categories","tags":null,"title":"JavaScript"},{"body":"","link":"https://trimad.github.io/categories/p5.js/","section":"categories","tags":null,"title":"p5.js"},{"body":"","link":"https://trimad.github.io/tags/spiral/","section":"tags","tags":null,"title":"spiral"},{"body":"","link":"https://trimad.github.io/tags/rundll32/","section":"tags","tags":null,"title":"rundll32"},{"body":"Loads and runs 32-bit dynamic-link libraries (DLLs). You must run the rundll32 command from an elevated command prompt. To open an elevated command prompt, click Start, right-click Command Prompt, and then click Run as administrator.\nMake Windows beep ```console rundll32 user32.dll, MessageBeep ``` Lock Workstation ```console rundll32 user32.dll, LockWorkStation ``` Put Workstation to sleep ```console rundll32 powrprof.dll, SetSuspendState Sleep ``` Microsoft Reference ss64.com Reference","link":"https://trimad.github.io/post/2022-04-21-rundll32/","section":"post","tags":["rundll32","userdll32"],"title":"rundll32"},{"body":"","link":"https://trimad.github.io/tags/userdll32/","section":"tags","tags":null,"title":"userdll32"},{"body":"","link":"https://trimad.github.io/categories/windows/","section":"categories","tags":null,"title":"Windows"},{"body":"","link":"https://trimad.github.io/tags/youtube-dl/","section":"tags","tags":null,"title":"youtube-dl"},{"body":"youtube-dl is a command-line program that allows users to download videos from YouTube and other video-sharing websites. The program is open-source and can be used on a variety of operating systems, including Windows, Mac, and Linux. It can download videos in a variety of formats, including MP4, FLV, and 3GP, and can also extract audio from videos as MP3 or other audio formats. Additionally, youtube-dl can be used to download videos from other websites like Vimeo, Dailymotion, and more.\nExamples Download a YouTube video with the best available audio quality: 1youtube-dl -f bestaudio \u0026#34;https://www.youtube.com/watch?v=iik25wqIuFo\u0026#34; Download an entire YouTube playlist:\n1youtube-dl --yes-playlist \u0026#34;https://www.youtube.com/playlist?list=PLG49S3nxzAnmpdmX7RoTOyuNJQAb-r-gd\u0026#34; Begin downloading from a playlist at a specific position:\n1youtube-dl --yes-playlist --playlist-start 22 \u0026#34;https://www.youtube.com/watch?v=M5c9HdaQqh0\u0026amp;list=PLG49S3nxzAnmpdmX7RoTOyuNJQAb-r-gd\u0026#34; Download the Windows executable","link":"https://trimad.github.io/post/2022-04-16-youtube-dl/","section":"post","tags":["download","youtube-dl"],"title":"youtube-dl"},{"body":"This script uses the Windows command-line tool \u0026quot;netsh\u0026quot; to retrieve information about wireless network profiles that have been previously connected to on the computer. It then parses the information to extract the SSID (name) and password for each profile, and outputs that information to a CSV file named \u0026quot;output.csv\u0026quot;. Finally, the script opens the \u0026quot;output.csv\u0026quot; file.\nThe script uses the \u0026quot;Invoke-Item\u0026quot; command to open the \u0026quot;output.csv\u0026quot; file, which is the PowerShell command equivalent of double-clicking on a file in Windows Explorer. It opens the file in the default application associated with the .csv file type on the system, typically it will be opened in excel or similar spreadsheet software.\n","link":"https://trimad.github.io/post/2022-04-11-dump-wifi-passwords/","section":"post","tags":["netsh","passwords","reports"],"title":"Dump WiFi Passwords"},{"body":"","link":"https://trimad.github.io/tags/netsh/","section":"tags","tags":null,"title":"netsh"},{"body":"","link":"https://trimad.github.io/tags/passwords/","section":"tags","tags":null,"title":"passwords"},{"body":"","link":"https://trimad.github.io/tags/reports/","section":"tags","tags":null,"title":"reports"},{"body":"","link":"https://trimad.github.io/categories/security/","section":"categories","tags":null,"title":"Security"},{"body":"","link":"https://trimad.github.io/categories/archives/","section":"categories","tags":null,"title":"archives"},{"body":"","link":"https://trimad.github.io/archives/","section":"archives","tags":null,"title":"Archives"},{"body":"","link":"https://trimad.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"https://trimad.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://trimad.github.io/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Page bundles are an optional way to organize page resources within Hugo.\nYou can opt-in to using page bundles in Hugo Clarity with usePageBundles in your site configuration or in a page's front matter. Read more about usePageBundles.\nWith page bundles, resources for a page or section, like images or attached files, live in the same directory as the content itself rather than in your static directory.\nHugo Clarity supports the use of leaf bundles, which are any directories within the content directory that contain an index.md file. Hugo's documentation gives this example:\n1content 2├── about 3│ ├── index.md 4├── posts 5│ ├── my-post 6│ │ ├── content1.md 7│ │ ├── content2.md 8│ │ ├── image1.jpg 9│ │ ├── image2.png 10│ │ └── index.md 11│ └── my-other-post 12│ └── index.md 13│ 14└── another-section 15 ├── .. 16 └── not-a-leaf-bundle 17 ├── .. 18 └── another-leaf-bundle 19 └── index.md In the above example `content` directory, there are four leaf bundles: about: This leaf bundle is at the root level (directly under content directory) and has only the index.md.\nmy-post: This leaf bundle has the index.md, two other content Markdown files and two image files. image1 is a page resource of my-post and only available in my-post/index.md resources. image2 is a page resource of my-post and only available in my-post/index.md resources.\nmy-other-post: This leaf bundle has only the index.md.\nanother-leaf-bundle: This leaf bundle is nested under couple of directories. This bundle also has only the index.md.\nThe hierarchy depth at which a leaf bundle is created does not matter, as long as it is not inside another leaf bundle.\nAdvantages to using page bundles The image below is part of the bundle of this page, and is located at content/post/bundle/building.png. Because it's within this page's bundle, the markup for the image only has to specify the image's filename, building.png.\nIf you ever change the name of the directory in which this Markdown file and the image reside, the reference to the image would not need to be updated.\nIn addition to more cleanly organizing your content and related assets, when using page bundles, Hugo Clarity will automatically generate markup for modern image formats, which are smaller in file size.\nFor instance, when you reference an image like building.png, Hugo Clarity will check to see if the same image (based on filename) exists in WebP, AVIF or JXL formats. If you inspect the image above, you'll see a \u0026lt;source\u0026gt; element for building.webp, because that file is also present. Hugo Clarity will only include the markup if these images exist.\nBrowsers that support these formats and the \u0026lt;picture\u0026gt; element will load them, while browsers that do not will fall-back to the default image. Read more about this process.\nFinally, note that page assets can be further managed and refined within the page's front matter if you wish, and are not limited to images alone.\nDisadvantages to using page bundles Page resources in a bundle are only available to the page with which they are bundled — that means you can't include an image with one page and then reference it from another.\nImages that are being used in multiple places are more appropriate for your Hugo assets directory. Unlike files in the Hugo static directory, files in the assets directory can be run through Hugo Pipes, which includes image processing.\n","link":"https://trimad.github.io/archives/bundle/","section":"archives","tags":["Hugo"],"title":"Using Hugo page bundles"},{"body":" ","link":"https://trimad.github.io/archives/map/","section":"archives","tags":null,"title":"Using OpenStreetMap"},{"body":"","link":"https://trimad.github.io/categories/batchfile/","section":"categories","tags":null,"title":"Batchfile"},{"body":"Place these 3 files in any directory and run update.vbs to begin recording a Windows session silently.\nGithub Repository update.exe This file is just ffmpeg that's been renamed to be slightly more inconspicuous in Task Manager. update.bat There are two lines to this batch file. The first line deletes \u0026quot;output.mp4\u0026quot; if it already exists in the same directory. The framerate in frames per second of the recording is set here following the \u0026quot;-framerate\u0026quot; flag The amount of time in seconds to record is set here following the \u0026quot;-t\u0026quot; flag output.mp4 will be saved in the same directory after the specified amount of recording time is up. update.vbs This Visual Basic script runs udpate.bat without a visible command prompt. ","link":"https://trimad.github.io/post/2022-02-09-record-desktop-silently/","section":"post","tags":["ffmpeg"],"title":"Record Desktop Silently"},{"body":"","link":"https://trimad.github.io/categories/vbscript/","section":"categories","tags":null,"title":"VBScript"},{"body":"","link":"https://trimad.github.io/tags/audio/","section":"tags","tags":null,"title":"audio"},{"body":"","link":"https://trimad.github.io/categories/ffmpeg/","section":"categories","tags":null,"title":"ffmpeg"},{"body":"ffmpeg is a complete, cross-platform solution to record, convert and stream audio and video.\nffmpeg Download ffmpeg Documentation Audio Processing Convert to 8kHz, single-channel PCM 1ffmpeg -i \u0026#34;input.mp3\u0026#34; -ar 8000 -ac 1 output.wav Convert to 16kHz, single-channel PCM 1ffmpeg -i \u0026#34;input.mp3\u0026#34; -ar 16000 -ac 1 output.wav Convert to 48kHz, single-channel PCM 1ffmpeg -i input.mp3 -ar 48000 -ac 1 output.wav Video Processing Add Music to a Video 1ffmpeg -i video.mp4 -i music.mp3 -codec copy -shortest output.mp4 -i video.mp4 Select “video.mp4” as an input file from the same directory. -i music.mp3 Select “music.mp4” as an input file from the same directory. -codec copy Specifies that we are not re-encoding anything. -shortest Use this flag if the video length is shorter than the audio length. Otherwise, use no flag at all here. Assemble images into a video 1ffmpeg -framerate 60 -s 2560x1440 -i %04d.png output.mp4 -framerate 60 Set the frame rate to 60FPS. -s 2560x1440 Set the video resolution to 2560x1440 pixels. -i %04d.png This flag assumes there is a folder of .png files in the same directory named in the format 0001.png, 0002.png, etc. It will load all images following this naming convention as inputs to be processed. 1\u0026gt;ffmpeg -start_number 0140 -i %04d.png interpolated-0.mp4 Re-encode Video For YouTube 1ffmpeg -i transition.mp4 -c:v libx264 -preset slow -crf 18 -c:a copy -pix_fmt yuv420p transition.mkv -i transition.mp4 Select \u0026quot;transition.mp4\u0026quot; as the input file. -c:v libx264 set the video codec to H.264 -preset slow A preset is a collection of options that will provide a certain encoding speed to compression ratio. A slower preset will provide better compression (compression is quality per filesize). This means that, for example, if you target a certain file size or constant bit rate, you will achieve better quality with a slower preset. Similarly, for constant quality encoding, you will simply save bitrate by choosing a slower preset. Use the slowest preset that you have patience for. The available presets in descending order of speed are: ultrafast superfast veryfast faster fast medium (default preset) slow slower veryslow -crf 18 Constant Rate Factor (CRF). The range of the CRF scale is 0–51, where 0 is lossless, 23 is the default, and 51 is worst quality possible. A lower value generally leads to higher quality, and a subjectively sane range is 17–28. Consider 17 or 18 to be visually lossless or nearly so; it should look the same or nearly the same as the input but it isn't technically lossless. -c:a copy Copy the audio codec from that of the input file to the output file -pix_fmt yuv420p This flag is only needed for your output to work in QuickTime, Windows Media player and other offline media players. These players only support the YUV planar color space with 4:2:0 chroma subsampling for H.264 video. Otherwise, depending on your source, ffmpeg may output to a pixel format that may be incompatible with these players. Video Filters Stack two videos side-by-side 1ffmpeg -i \u0026#34;left.mp4\u0026#34; -i \u0026#34;right.mp4\u0026#34; -filter_complex hstack output.mp4 This command uses the ffmpeg software to combine two video files, \u0026quot;left.mp4\u0026quot; and \u0026quot;right.mp4\u0026quot;, into a single output video file \u0026quot;output.mp4\u0026quot;. The \u0026quot;-i\u0026quot; option specifies the input video files. The \u0026quot;-filter_complex\u0026quot; option applies the \u0026quot;hstack\u0026quot; filter, which horizontally stacks the two input videos side by side to form a single output video.\nVertical scroll and wrap 1ffmpeg -i input.mp4 -vf scroll=vertical=0.001,format=yuv420p output.mp4 This ffmpeg command takes an input video file named \u0026quot;input.mp4\u0026quot; and applies a video filter to it that creates a scrolling effect with a vertical scroll speed of 0.001 units per frame. The output video is then saved as \u0026quot;output.mp4\u0026quot; in the YUV420P format.\nRemove black bars from top and bottom of video 1ffmpeg -i input.mp4 -vf \u0026#34;crop=iw:ih-40:0:20\u0026#34; -c:v libx264 -crf 18 -pix_fmt yuv420p output.mp4 Resize a video's height while maintaining aspect width aspect ratio 1ffmpeg -i input.mp4 -vf \u0026#34;scale=-1:1280\u0026#34; -c:v libx264 -crf 18 -pix_fmt yuv420p output.mp4 Crop a video down the center 1ffmpeg -i input.mp4 -vf \u0026#34;crop=720:ih:((iw-720)/2):0\u0026#34; -c:v libx264 -crf 18 -pix_fmt yuv420p output.mp4 Do the above three in one go 1ffmpeg -i input.mp4 -vf \u0026#34;crop=iw:ih-40:0:20,scale=-1:1280,crop=720:ih:((iw-720)/2):0\u0026#34; -c:v libx264 -crf 18 -pix_fmt yuv420p output.mp4 Animated GIF Create an animated GIF from a video 1ffmpeg -i input.mp4 output.gif Assembled a folder of images into an animated GIF Generate a palette ```Shell ffmpeg -y -i %3d.png -vf palettegen palette.png ``` The command line above is using FFmpeg to process a sequence of PNG images, where each image is named with a number and a 3 digit format, such as \u0026quot;001.png\u0026quot;, \u0026quot;002.png\u0026quot;, etc. In summary, this command is generating a color palette from a sequence of PNG images and saving the palette to the file \u0026quot;palette.png\u0026quot;. This palette can be used to create a GIF animation from the sequence of images. The resulting palette will have a smaller number of colors than the original images, allowing for a smaller file size for the final GIF.\nThe options used in the command are:\n\u0026quot;-y\u0026quot; : Overwrite output files without asking. \u0026quot;-i %3d.png\u0026quot; : The input file is a sequence of PNG images, where the file name format is \u0026quot;%3d\u0026quot; (3 digits) followed by \u0026quot;.png\u0026quot; \u0026quot;-vf palettegen\u0026quot; : This is a video filter that generates a color palette from the input image sequence. \u0026quot;palette.png\u0026quot; : This is the output file name for the generated color palette. In summary, this command is generating a color palette from a sequence of PNG images and saving the palette to the file \u0026quot;palette.png\u0026quot;. This palette can be used to create a GIF animation from the sequence of images. The resulting palette will have a smaller number of colors than the original images, allowing for a smaller file size for the final GIF. Create an animated GIF using the previously generated color palette 1ffmpeg -y -f image2 -framerate 60 -i %3d.png -i palette.png -filter_complex paletteuse file.gif The command line above is using FFmpeg to create a GIF animation from a sequence of PNG images and a previously generated color palette.\nThe options used in the command are:\n\u0026quot;-y\u0026quot; : Overwrite output files without asking. \u0026quot;-f image2\u0026quot; : The input is a sequence of image files \u0026quot;-framerate 60\u0026quot; : The frame rate for the output gif is set to 60 frames per second \u0026quot;-i %3d.png\u0026quot; : The input file is a sequence of PNG images, where the file name format is \u0026quot;%3d\u0026quot; (3 digits) followed by \u0026quot;.png\u0026quot; \u0026quot;-i palette.png\u0026quot; : The input file is the previously generated color palette \u0026quot;-filter_complex paletteuse\u0026quot; : This is a filter that uses the previously generated palette to create the gif animation \u0026quot;file.gif\u0026quot; : This is the output file name for the created gif animation In summary, this command is creating a gif animation from a sequence of PNG images using a previously generated color palette, and saving the animation to the file \u0026quot;file.gif\u0026quot;. The resulting gif animation will have the same frame rate as the input images and a smaller file size due to the use of a limited color palette. ","link":"https://trimad.github.io/post/2022-01-27-ffmpeg/","section":"post","tags":["audio","video"],"title":"ffmpeg"},{"body":"","link":"https://trimad.github.io/tags/video/","section":"tags","tags":null,"title":"video"},{"body":"","link":"https://trimad.github.io/tags/active-directory/","section":"tags","tags":null,"title":"active directory"},{"body":"","link":"https://trimad.github.io/tags/azure/","section":"tags","tags":null,"title":"azure"},{"body":"I found myself in a situation where I needed to generate a report to troubleshoot an email issue for a client. Some data could only be retrieved from the ExchangeOnlineManagement module, and other data only from the AzureAD module. This PowerShell script demonstrates one solution of using both modules in tandem with a nested for-loop that compares the UserPrincipalName with every iteration.\n","link":"https://trimad.github.io/post/2021-11-17-combining-powershell-cmdlets/","section":"post","tags":["azure","reports","active directory"],"title":"Combining PowerShell Cmdlets"},{"body":"","link":"https://trimad.github.io/categories/active-directory/","section":"categories","tags":null,"title":"Active Directory"},{"body":"This PowerShell script generates a report showing all groups and group members when run on an on-premises domain controller. The script requires that you import the ActiveDirectory module. The report is in .csv format so the rows may need some manipulation to see all the members if you're opening it in Excel.\n","link":"https://trimad.github.io/post/2021-09-16-active-directory-group-membership/","section":"post","tags":["active directory","domain","reports"],"title":"Active Directory Group Membership"},{"body":"","link":"https://trimad.github.io/tags/calendars/","section":"tags","tags":null,"title":"calendars"},{"body":"","link":"https://trimad.github.io/tags/domain/","section":"tags","tags":null,"title":"domain"},{"body":"","link":"https://trimad.github.io/tags/m365/","section":"tags","tags":null,"title":"M365"},{"body":" 1# Connect to Exchage 2Import-Module ExchangeOnlineManagement 3Connect-ExchangeOnline -UserPrincipalName \u0026lt;UPN\u0026gt; 4 5# Remove AccessRights from a user 6Remove-MailboxFolderPermission -Identity target@company.com:\\Calendar -User user@company.com 7# Grant AccessRights to a user 8Add-MailboxFolderPermission -Identity target@company.com:\\Calendar -User user@company.com -AccessRights Owner 9# See who currently has folder permissions to a user\u0026#39;s calendar 10Get-MailboxFolderPermission -Identity target@company.com:\\Calendar I haven't tested these since 2021:\n1# Connect to Exchage 2Import-Module ExchangeOnlineManagement 3Connect-ExchangeOnline -UserPrincipalName \u0026lt;UPN\u0026gt; 4 5# Get a list of all mailbox aliases 6# Source: https://docs.microsoft.com/en-us/powershell/module/exchange/get-mailbox?view=exchange-ps 7$users = Get-Mailbox | Select -ExpandProperty Alias 8 9# Add AccessRights for a user to all mailboxes 10# Source: https://docs.microsoft.com/en-us/powershell/module/exchange/add-mailboxfolderpermission?view=exchange-ps 11Foreach ($user in $users) {Add-MailboxFolderPermission $user\u0026#34;:\\Calendar\u0026#34; -User \u0026lt;UPN\u0026gt; -AccessRights PublishingEditor} 12 13# Set AccessRights to a user for all mailboxes. You would do this if AccessRights already exist and you need to overwrite them. 14# Source: https://docs.microsoft.com/en-us/powershell/module/exchange/set-mailboxfolderpermission?view=exchange-ps 15Foreach ($user in $users) {Set-MailboxFolderPermission $user\u0026#34;:\\Calendar\u0026#34; -User \u0026lt;UPN\u0026gt; -AccessRights PublishingEditor} 16 17# Get the current access rights this user has for all mailboxes. 18# Source: https://docs.microsoft.com/en-us/powershell/module/exchange/get-mailboxfolderpermission?view=exchange-ps 19Foreach ($user in $users) {Get-MailboxFolderPermission $user\u0026#34;:\\Calendar\u0026#34; -User \u0026lt;UPN\u0026gt;} ","link":"https://trimad.github.io/post/2021-09-16-manage-exchange-online-calendars/","section":"post","tags":["calendars","M365"],"title":"Managing Exchange Calendars"},{"body":"The \u0026quot;Notices\u0026quot; shortcode enables you to call out pieces of information - sidebars, warnings, tips, etc.\nTo create a notice on a page, you can use the notice shortcode.\nYou use the notice shortcode, with the first parameter being one of note, info, tip, and warning. Then add a title for your note in quotes as the second parameter. The inner body of the note can be whatever markdown you want to create.\nThe following shortcode syntax within a markdown doc:\n1{{% notice note \u0026#34;Note\u0026#34; %}} 2This is a standard \u0026#34;note\u0026#34; style. 3{{% /notice %}} will render as:\nNote This is a standard \u0026quot;note\u0026quot; style.\nThe other three variants follow.\nInfo Here is the \u0026quot;info\u0026quot; style.\nTip Here is a \u0026quot;tip\u0026quot; variant of a notice.\nWarning Here is the \u0026quot;warning\u0026quot; flavor of a notice.\nAlso note that the content of a notice can contain anything you could put on a normal page - as shown below:\nComplex Notices are Possible! This is a notice that has a lot of various kinds of content in it.\nHere is a bulleted list With more than one bullet And even more than one level Code blocks are fine here, too....\n1public void SayHello() 2{ 3 Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); 4} Productivity Booster! If you're using VS Code for your editing, copy the .vscode\\clarity.code-snippets file into a .vscode root folder on your repo. This will enable you to type note then \u0026lt;tab\u0026gt; then choose with up/down arrows which flavor notice you want, then \u0026lt;tab\u0026gt; again to provide a title, then \u0026lt;tab\u0026gt; to add your content!\nTo use the snippet, you need to first enable quickSuggestions for Markdown (one time only):\nGo to Preferences-\u0026gt;Settings then search for quickSuggestions Follow the link to Edit in settings.json Toward the bottom of the file, paste in the following JSON: 1\u0026#34;[markdown]\u0026#34;: { 2 \u0026#34;editor.quickSuggestions\u0026#34;: true 3 } Close and save the settings. ","link":"https://trimad.github.io/archives/notices/","section":"archives","tags":null,"title":"Using Notices"},{"body":"Managing auto-expanding archives via the ExchangeOnlineManagement module is a pain in my ass. This Github Gist is an aggregate of scripts I've written that allow me to administrate this mailbox feature effectively.\n","link":"https://trimad.github.io/post/2021-07-06-manage-auto-expanding-archives/","section":"post","tags":["office","reports"],"title":"Managing Auto-Expanding Archives"},{"body":"","link":"https://trimad.github.io/tags/office/","section":"tags","tags":null,"title":"office"},{"body":"","link":"https://trimad.github.io/tags/k-means/","section":"tags","tags":null,"title":"k-means"},{"body":"Wikipedia k-means clustering is a method of vector quantization, originally from signal processing, that aims to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean (cluster centers or cluster centroid), serving as a prototype of the cluster. This results in a partitioning of the data space into Voronoi cells.\nGitHub repository: https://github.com/Trimad/k-means-clustering\n","link":"https://trimad.github.io/post/2021-05-18-k-means-clustering/","section":"post","tags":["k-means"],"title":"k-means Clustering"},{"body":"","link":"https://trimad.github.io/categories/reference/","section":"categories","tags":null,"title":"reference"},{"body":"Knowing the URI Scheme is useful because you can jump straight to specific settings menus using 🪟+R.\nSource","link":"https://trimad.github.io/post/2021-01-01-ms-settings-uri-reference/","section":"post","tags":[],"title":"Windows 10/11 ms-settings URI Scheme Reference"},{"body":"","link":"https://trimad.github.io/tags/appx/","section":"tags","tags":null,"title":"appx"},{"body":"","link":"https://trimad.github.io/categories/appx/","section":"categories","tags":null,"title":"Appx"},{"body":"PowerShell script that reboots a list of computers and emails the status of the machines.\n","link":"https://trimad.github.io/post/2019-08-28-remote-reboot-with-smtp-status/","section":"post","tags":["smtp"],"title":"Remote Reboot With SMTP Status"},{"body":"Microsoft Reference ","link":"https://trimad.github.io/post/2019-08-28-remove-appx-packages/","section":"post","tags":["appx"],"title":"Remove-AppxPackage"},{"body":"","link":"https://trimad.github.io/tags/smtp/","section":"tags","tags":null,"title":"smtp"},{"body":"","link":"https://trimad.github.io/tags/buddhabrot/","section":"tags","tags":null,"title":"buddhabrot"},{"body":" ","link":"https://trimad.github.io/post/2019-08-25-buddhabrot/","section":"post","tags":["fractal","buddhabrot"],"title":"Buddhabrot"},{"body":"","link":"https://trimad.github.io/categories/c#/","section":"categories","tags":null,"title":"C#"},{"body":"This Google Apps Script aggregates data submitted by Google Forms, puts it in .xlsx format and sends it in an HTML formatted email.\n","link":"https://trimad.github.io/post/2019-08-25-daily-donation-report/","section":"post","tags":["google forms","gsuite","reports"],"title":"Daily Donation Report"},{"body":"","link":"https://trimad.github.io/categories/fractal/","section":"categories","tags":null,"title":"Fractal"},{"body":"","link":"https://trimad.github.io/categories/google-apps-script/","section":"categories","tags":null,"title":"Google Apps Script"},{"body":"","link":"https://trimad.github.io/tags/google-forms/","section":"tags","tags":null,"title":"google forms"},{"body":"","link":"https://trimad.github.io/tags/gsuite/","section":"tags","tags":null,"title":"gsuite"},{"body":"This script was written to satisfy a niche case where I temporarily needed a PoS (Point of Sale) to automatically login upon startup using AD credentials.\n","link":"https://trimad.github.io/post/2019-08-19-autoadminlogon/","section":"post","tags":["regedit","domain"],"title":"Enable AutoAdminLogon with PowerShell"},{"body":"","link":"https://trimad.github.io/tags/regedit/","section":"tags","tags":null,"title":"regedit"},{"body":"","link":"https://trimad.github.io/post/2019-08-18-blending-textures-with-open-simplex-noise/","section":"post","tags":["open simplex noise"],"title":"Blending Textures With Open Simplex Noise"},{"body":"","link":"https://trimad.github.io/tags/open-simplex-noise/","section":"tags","tags":null,"title":"open simplex noise"},{"body":"","link":"https://trimad.github.io/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://trimad.github.io/tags/css/","section":"tags","tags":null,"title":"css"},{"body":"","link":"https://trimad.github.io/tags/featured/","section":"tags","tags":null,"title":"featured"},{"body":"","link":"https://trimad.github.io/tags/html/","section":"tags","tags":null,"title":"html"},{"body":"","link":"https://trimad.github.io/tags/markdown/","section":"tags","tags":null,"title":"markdown"},{"body":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nImages Local image, alt text as caption The following image is located within the Hugo site. Because it has alt text but no title text, the caption is generated by the alt text.\nRemote image, specified caption The following image is loaded from a remote URL. The alt text is the same (for screen readers and in cases when the image doesn't load) but because a separate title is provided, the title is used for the caption:\nThis is Jane Doe Image with alt text and no caption Alt text is always recommended for SEO, accessibility and in cases when images don't load. However, you don't necessarily always want an image to have a caption. In that case, use a title with one space:\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don't communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;!-- this line is extraneous 2Error from server (Forbidden): deployments.apps is forbidden: User \u0026#34;chiptest\u0026#34; cannot create resource \u0026#34;deployments\u0026#34; in API group \u0026#34;apps\u0026#34; in the namespace \u0026#34;default\u0026#34; --\u0026gt; 11\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo's internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","link":"https://trimad.github.io/archives/markdown-syntax/","section":"archives","tags":["markdown","css","html","themes","featured"],"title":"Markdown Syntax Guide"},{"body":"","link":"https://trimad.github.io/categories/syntax/","section":"categories","tags":null,"title":"syntax"},{"body":"","link":"https://trimad.github.io/tags/themes/","section":"tags","tags":null,"title":"themes"},{"body":"","link":"https://trimad.github.io/categories/themes/","section":"categories","tags":null,"title":"themes"},{"body":"","link":"https://trimad.github.io/tags/privacy/","section":"tags","tags":null,"title":"privacy"},{"body":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode YouTube Privacy Enhanced Shortcode Twitter Simple Shortcode Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 See documentation https://gohugo.io/content-management/shortcodes/#tweet for more details\nVimeo Simple Shortcode ","link":"https://trimad.github.io/archives/rich-content/","section":"archives","tags":["shortcodes","privacy"],"title":"Rich Content"},{"body":"","link":"https://trimad.github.io/tags/shortcodes/","section":"tags","tags":null,"title":"shortcodes"},{"body":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","link":"https://trimad.github.io/archives/placeholder-text/","section":"archives","tags":["markdown","text"],"title":"Placeholder Text"},{"body":"","link":"https://trimad.github.io/tags/text/","section":"tags","tags":null,"title":"text"},{"body":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1{{ if or .Params.math .Site.Params.math }} 2{{ partial \u0026#34;math.html\u0026#34; . }} 3{{ end }} To enable KaTex globally set the parameter math to true in a project's configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","link":"https://trimad.github.io/archives/math-typesetting/","section":"archives","tags":null,"title":"Math Typesetting"},{"body":"","link":"https://trimad.github.io/tags/emoji/","section":"tags","tags":null,"title":"emoji"},{"body":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site's configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1.emoji { 2 font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; 3}","link":"https://trimad.github.io/archives/emoji-support/","section":"archives","tags":["emoji"],"title":"Emoji Support"},{"body":"This batch file utilizes robocopy to mirror a list of files contained within \u0026quot;targets.txt\u0026quot; in the same directory.\n","link":"https://trimad.github.io/post/2019-02-28-robo-mirror/","section":"post","tags":["robocopy"],"title":"Robo Mirror"},{"body":"","link":"https://trimad.github.io/tags/robocopy/","section":"tags","tags":null,"title":"robocopy"},{"body":"Here's my take on... Daniel Shiffman's take on... Beesandbomb's take on the cube wave. Sources - https://twitter.com/beesandbombs/status/940639806522085376 - https://www.youtube.com/watch?v=H81Tdrmz2LA","link":"https://trimad.github.io/post/2018-12-30-cube-wave/","section":"post","tags":[],"title":"Cube Wave"},{"body":"In this sketch I turned every pixel of an image into a Lorenz System. I mapped the velocity of that system to the brightness value of the pixel. This was the result. Sadly, the Processing sketch I made this with is gone forever.\n","link":"https://trimad.github.io/post/2018-11-21-lorenz-doll/","section":"post","tags":["lorenz system"],"title":"Lorenz Doll"},{"body":"","link":"https://trimad.github.io/tags/lorenz-system/","section":"tags","tags":null,"title":"lorenz system"},{"body":" Launch this sketch is a new window (recommended) Launch p5.js web editor This is a virtual simulation of the magnets on my girlfriend's fridge.\n","link":"https://trimad.github.io/post/2018-11-16-fridge-magnet-simulator/","section":"post","tags":["processing","interactive"],"title":"Fridge Magnet Simulator"},{"body":"","link":"https://trimad.github.io/tags/processing/","section":"tags","tags":null,"title":"processing"},{"body":" Launch this sketch is a new window (recommended) Launch p5.js web editor This is not a program that should be running in a browser. With that said, writing this program was a laborious process that taught me a lot about JavaScript, about Processing, and about optimization. The algorithm I implemented works first by creating a grid of evenly-spaced points. Each points has a corresponding object that rotates around that point that can be assigned characteristics such as rotation radius, a shape, and a color that corresponds to an x and y position on a source image. To make things more interesting, I mapped the phase of each object's rotation to the brightness value of the source image's corresponding pixel. The results... could probably be better summarized with a YouTube demonstration. ","link":"https://trimad.github.io/post/2018-11-12-orbiting-pixels-utility/","section":"post","tags":["processing","interactive"],"title":"Orbiting Pixels Utility"},{"body":"","link":"https://trimad.github.io/tags/counting-sort/","section":"tags","tags":null,"title":"counting sort"},{"body":" ","link":"https://trimad.github.io/post/2018-07-18-counting-sort/","section":"post","tags":["sorting","counting sort"],"title":"Counting Sort"},{"body":"","link":"https://trimad.github.io/tags/sorting/","section":"tags","tags":null,"title":"sorting"},{"body":"hell yeah dude 1float x = 0; 2float y = 0; 3 4float[][] magicX = { 5 {0.00, 0.00}, 6 {0.85, 0.04}, 7 {0.20, -0.26}, 8 {-0.15, 0.28} 9}; 10 11float[][] magicY = { 12 {0.16, 0.00, 0.00}, 13 {-0.04, 0.85, 1.6}, 14 {0.23, 0.22, 1.6}, 15 {0.26, 0.24, 0.44} 16}; 17 18//PGraphics pg; 19 20int iterations = 123456; 21 22void setup() { 23 //fullScreen(P3D); 24 size(2048, 2048, P3D); 25 background(0); 26 histogram = new int[width][height]; 27 //pg = createGraphics(width*2, height*2); 28 //pg.beginDraw(); 29 //pg.background(0, 50); 30 //pg.endDraw(); 31} 32 33boolean record = false; 34void draw() { 35 /* 36 background(); 37 translate(width*0.5, 0, 0); 38 rotateY(frameCount*0.01); 39 translate(-width*0.5, 0, 0); 40 image(pg, -width, -height); 41 */ 42 43 for (int i = 0; i \u0026lt; iterations; i++) { 44 getPoint(); 45 drawPoint(); 46 } 47 48 if (frameCount \u0026lt; 100) { 49 saveFrame(\u0026#34;frame-####.jpg\u0026#34;); 50 } else { 51 exit(); 52 } 53} 54 55void getPoint() { 56 57 float dx = 0; 58 float dy = 0; 59 60 float r1 = random(1); 61 if (r1 \u0026lt; 0.01) { 62 //1 63 dx = magicX[0][0]; 64 dy = magicY[0][0] * y; 65 } else if (r1 \u0026lt; 0.86 ) { 66 //2 67 dx = magicX[1][0] * x + magicX[1][1] * y; 68 dy = magicY[1][0] * x + magicY[1][1] * y + magicY[1][2]; 69 } else if (r1 \u0026lt; 0.93) { 70 //3 71 dx = magicX[2][0] * x + magicX[2][1] * y; 72 dy = magicY[2][0] * x + magicY[2][1] * y + magicY[2][2]; 73 } else { 74 //4 75 dx = magicX[3][0] * x + magicX[3][1] * y; 76 dy = magicY[3][0] * x + magicY[3][1] * y + magicY[3][2]; 77 } 78 79 x = dx; 80 y = dy; 81} 82 83int[][] histogram; 84int highest = 0; 85 86void drawPoint() { 87 88 int px = (int)map(x, -2.1820, 2.6558, width*0.19, width*0.81); 89 int py = (int)map(y, 0, 9.9983, height*0.99, height*0.01); 90 91 histogram[px][py]++; 92 93 if (histogram[px][py] \u0026gt; highest) { 94 highest = histogram[px][py]; 95 set(px, py, 255); 96 } 97 98 if (highest \u0026gt; 1) { 99 //float bright = map(histogram[px][py], 0, (float)Math.log(highest), 0, 255); 100 //stroke(histogram[px][py], bright,0); 101 float m = map(histogram[px][py], 0, log(highest), 0, 1); 102 color from = color(#123556); 103 color to = color(255); 104 color l = lerpColor(from, to, m); 105 106 // pixels[py*width+px] = l; 107 set(px, py, l); 108 } 109} Written using the Processing Java library: https://processing.org/download\n","link":"https://trimad.github.io/post/2018-06-28-barnsley-fern/","section":"post","tags":["fractal"],"title":"Barnsley Fern"},{"body":" Distance formula 1 execution time: 2224ms Distance formula 2 execution time: 4ms Distance formula 3 execution time: 3ms ","link":"https://trimad.github.io/post/2018-04-17-comparing-java-distance-functions/","section":"post","tags":["distance"],"title":"Comparing Java Distance Functions"},{"body":"","link":"https://trimad.github.io/tags/distance/","section":"tags","tags":null,"title":"distance"},{"body":"","link":"https://trimad.github.io/tags/prime-numbers/","section":"tags","tags":null,"title":"prime numbers"},{"body":" Launch this sketch is a new window (recommended) Launch p5.js web editor The Ulam Spiral or prime spiral is a graphical depiction of the set of prime numbers, devised by mathematician Stanislaw Ulam in 1963 and popularized in Martin Gardner's Mathematical Games column in Scientific American a short time later. It is constructed by writing the positive integers in a square spiral and specially marking the prime numbers.\nWhat I've done differently is allowed for iterating every integer in the grid forwards or backwards to search for long, connected diaganal lines of prime numbers in the grid. The framerate of the animation can be adjusted, as well as the \u0026quot;grid multiplier\u0026quot; which is how many cells to draw in each row and collumn. Double-clicking on the menu collapses it. There are also basic keyboard arrow controls:\nControls - LEFT ARROW = Step backward - RIGHT ARROW = Step forwards - UP ARROW = Pause - DOWN ARROW = Pause","link":"https://trimad.github.io/post/2018-05-17-ulam-sprial/","section":"post","tags":["prime numbers","processing","interactive"],"title":"Ulam Spiral"},{"body":"","link":"https://trimad.github.io/tags/bipartite-graph/","section":"tags","tags":null,"title":"bipartite graph"},{"body":"","link":"https://trimad.github.io/categories/coding-challenge/","section":"categories","tags":null,"title":"Coding Challenge"},{"body":"","link":"https://trimad.github.io/tags/maximum-flow/","section":"tags","tags":null,"title":"maximum flow"},{"body":"","link":"https://trimad.github.io/tags/uva/","section":"tags","tags":null,"title":"uva"},{"body":"","link":"https://trimad.github.io/post/2018-05-01-uva-11045/","section":"post","tags":["uva","maximum flow","bipartite graph"],"title":"UVa Online Judge Challenge \"11045\""},{"body":"","link":"https://trimad.github.io/tags/bitset/","section":"tags","tags":null,"title":"bitset"},{"body":"","link":"https://trimad.github.io/tags/dag/","section":"tags","tags":null,"title":"dag"},{"body":"","link":"https://trimad.github.io/tags/directed-acyclic-graph/","section":"tags","tags":null,"title":"directed acyclic graph"},{"body":"","link":"https://trimad.github.io/tags/topological-sort/","section":"tags","tags":null,"title":"topological sort"},{"body":"","link":"https://trimad.github.io/post/2018-04-26-uva-10305/","section":"post","tags":["uva","dag","directed acyclic graph","topological sort","bitset"],"title":"UVa Online Judge Challenge \"10305\""},{"body":"","link":"https://trimad.github.io/tags/disjoint-set/","section":"tags","tags":null,"title":"disjoint set"},{"body":"","link":"https://trimad.github.io/post/2018-04-23-uva-572/","section":"post","tags":["uva","disjoint set"],"title":"UVa Online Judge Challenge \"572\""},{"body":"","link":"https://trimad.github.io/tags/kattis/","section":"tags","tags":null,"title":"kattis"},{"body":"Solved using a non-recursive version of BFS. Runs in pretty good time.\nThe Challenge My solution ","link":"https://trimad.github.io/post/2018-04-20-kattis-grid/","section":"post","tags":["kattis"],"title":"Kattis Challenge \"Grid\""},{"body":"TurboReader is my solution to the poor input performance of Scanner. All I need from a Reader in most programming contest problems is the ability to read ints and Double, and to read them quickly. That is all this class does, and it also tokenizes those values so that I never have to address empty lines in the text input. I have two versions of this class; a buffered version and an unbuffered version. Judging from the NetBeans performance profiler, the unbuffered version is favored in cases where the program only needs to read a few ints from System.in.\n","link":"https://trimad.github.io/post/2018-04-11-java-turbo-reader/","section":"post","tags":["string"],"title":"Faster Java String Inputs"},{"body":"","link":"https://trimad.github.io/tags/kruskals-algorithm/","section":"tags","tags":null,"title":"kruskal's algorithm"},{"body":"","link":"https://trimad.github.io/post/2018-04-11-kruskal-algorithm-processing/","section":"post","tags":["kruskal's algorithm","minimum spanning tree"],"title":"Kruskal's Algorithm Visualized With Processing"},{"body":"","link":"https://trimad.github.io/tags/minimum-spanning-tree/","section":"tags","tags":null,"title":"minimum spanning tree"},{"body":"","link":"https://trimad.github.io/tags/string/","section":"tags","tags":null,"title":"string"},{"body":"","link":"https://trimad.github.io/tags/3n+1/","section":"tags","tags":null,"title":"3n+1"},{"body":"","link":"https://trimad.github.io/tags/collatz-conjecture/","section":"tags","tags":null,"title":"collatz conjecture"},{"body":"","link":"https://trimad.github.io/post/2018-04-09-collatz-conjecture-unit-circle/","section":"post","tags":["collatz conjecture","3n+1"],"title":"Collatz Conjecture + Unit Circle"},{"body":"","link":"https://trimad.github.io/post/2018-04-09-uva-1112/","section":"post","tags":["uva"],"title":"UVa Online Judge Challenge \"1112\""},{"body":"","link":"https://trimad.github.io/post/2018-04-07-minimum-spanning-tree-visualized/","section":"post","tags":["prim's algorithm","minimum spanning tree"],"title":"Minimum Spanning Tree Visualized"},{"body":"","link":"https://trimad.github.io/tags/prims-algorithm/","section":"tags","tags":null,"title":"prim's algorithm"},{"body":"Exactly what it sounds like.\n","link":"https://trimad.github.io/post/2018-03-24-basic-prime-checker/","section":"post","tags":["prime numbers"],"title":"Basic Prime Checker, C++"},{"body":"","link":"https://trimad.github.io/categories/c++/","section":"categories","tags":null,"title":"C++"},{"body":"","link":"https://trimad.github.io/tags/android/","section":"tags","tags":null,"title":"android"},{"body":"","link":"https://trimad.github.io/post/2018-03-12-att-hackathon/","section":"post","tags":["android"],"title":"AT\u0026T Hackathon"},{"body":"","link":"https://trimad.github.io/tags/merge-sort/","section":"tags","tags":null,"title":"merge sort"},{"body":"This is a (perhaps overkill) 3D WEBGL visualization of Merge Sort using the WEBGL rendering mode.\nLaunch this sketch is a new window (recommended) Launch the p5.js editor Controls - ENTER = play sorting animation - LEFT_ARROW = step backwards - RIGHT_ARROW = step forwards - SCROLL_UP = zoom in - SCROLL_DOWN = zoom out","link":"https://trimad.github.io/post/2018-02-05-merge-sort/","section":"post","tags":["sorting","merge sort","interactive"],"title":"Merge Sort using WEBGL"},{"body":"","link":"https://trimad.github.io/tags/10print/","section":"tags","tags":null,"title":"10PRINT"},{"body":" This sketch is a browser-based image filtering utility inspired by 10PRINT. The UI allows users to produce faithful looking interpretations of 10PRINT, 10PRINT patterns that look hand-drawn, and the user can even create an explosive shit-mess of scribbles, if they so choose to.\nLaunch this sketch is a new window (recommended) Launch p5.js web editor","link":"https://trimad.github.io/post/2018-01-31-10print-image-filter/","section":"post","tags":["10PRINT","interactive"],"title":"10PRINT Image Filter"},{"body":"","link":"https://trimad.github.io/tags/insertion-sort/","section":"tags","tags":null,"title":"insertion sort"},{"body":"This is a (perhaps overkill) 3D WEBGL visualization of Insertion Sort using the WEBGL rendering mode.\nclick mouse in iframe to begin Controls - MOUSE = pan around - ENTER = play sorting animation - LEFT_ARROW = step backwards - RIGHT_ARROW = step forwards - SCROLL_UP = zoom in - SCROLL_DOWN = zoom out Launch this sketch is a new window (recommended) Launch the p5.js editor","link":"https://trimad.github.io/post/2018-01-28-insertion-sort/","section":"post","tags":["sorting","insertion sort","interactive"],"title":"Insertion Sort using WEBGL"},{"body":"","link":"https://trimad.github.io/post/2018-01-03-generating-terrain-with-open-simplex-noise/","section":"post","tags":["open simplex noise"],"title":"Generating Terrain with Open Simplex Noise"},{"body":"","link":"https://trimad.github.io/post/2018-01-02-open-simplex-noise/","section":"post","tags":["open simplex noise"],"title":"Open Simplex Noise"},{"body":" ","link":"https://trimad.github.io/post/2017-11-18-flippy-tiles/","section":"post","tags":["perlin noise"],"title":"Flippy Tiles"},{"body":"","link":"https://trimad.github.io/tags/perlin-noise/","section":"tags","tags":null,"title":"perlin noise"},{"body":"","link":"https://trimad.github.io/tags/juno/","section":"tags","tags":null,"title":"juno"},{"body":"","link":"https://trimad.github.io/post/2017-11-12-juno-cam-image-processing/","section":"post","tags":["juno","jupiter","space"],"title":"Juno Cam Image Processing"},{"body":"","link":"https://trimad.github.io/tags/jupiter/","section":"tags","tags":null,"title":"jupiter"},{"body":"","link":"https://trimad.github.io/tags/space/","section":"tags","tags":null,"title":"space"},{"body":"","link":"https://trimad.github.io/post/2017-11-09-uva-10550/","section":"post","tags":["uva"],"title":"UVa Online Judge Challenge \"10550\""},{"body":"","link":"https://trimad.github.io/tags/assembly/","section":"tags","tags":null,"title":"assembly"},{"body":" Output of the program This MASM program demonstrates the use of procedures (functions) as well as printing different colors to console.\n","link":"https://trimad.github.io/post/2017-10-24-demonstrating-procedures-and-console-output/","section":"post","tags":["assembly"],"title":"Demonstrating Procedures and Console Output"},{"body":"","link":"https://trimad.github.io/categories/masm/","section":"categories","tags":null,"title":"MASM"},{"body":"This is my first attempt a prime sieve in assembly. It is largely a direct translation from a Sieve of Eratosthenes originally written in Java, so this program is not exactly optimally structured. Firstly, it stores all primes up to n in an array. Secondly, it counts the number of primes before n and stores that hexadecimal value in the EAX register. This is rough. There is much room for improvement, and I intend to revisit this program without using the MUL function.\n","link":"https://trimad.github.io/post/2017-10-17-sieve-of-eratosthenes/","section":"post","tags":["assembly","prime numbers"],"title":"Sieve of Eratosthenes"},{"body":"","link":"https://trimad.github.io/post/2017-10-17-uva-272/","section":"post","tags":["uva"],"title":"UVa Online Judge Challenge \"272\""},{"body":"","link":"https://trimad.github.io/tags/fibonacci/","section":"tags","tags":null,"title":"fibonacci"},{"body":"This is my first x86 MASM program. As the title states, this program outputs a Fibonacci number that corresponds to an input value of n. I'm not happy with its current state because it is constantly swapping between the memory and registers.\n","link":"https://trimad.github.io/post/2017-10-07-nth-fibonacci-number/","section":"post","tags":["fibonacci","assembly"],"title":"Nth Fibonacci Number"},{"body":"","link":"https://trimad.github.io/post/2017-10-05-uva-100/","section":"post","tags":["uva"],"title":"UVa Online Judge Challenge \"100\""},{"body":"","link":"https://trimad.github.io/post/2017-10-05-uva-10110/","section":"post","tags":["uva"],"title":"UVa Online Judge Challenge \"10110\""},{"body":"The Challenge My solution ","link":"https://trimad.github.io/post/2017-09-15-kattis-parking2/","section":"post","tags":["kattis"],"title":"Kattis Challenge \"Parking\""},{"body":"The Challenge My solution ","link":"https://trimad.github.io/post/2017-09-15-kattis-sum-of-others/","section":"post","tags":["kattis"],"title":"Kattis Challenge \"Sum of Others\""},{"body":"","link":"https://trimad.github.io/post/2017-08-24-uva-11172/","section":"post","tags":["uva"],"title":"UVa Online Judge Challenge \"11172\""},{"body":"The Challenge My solution ","link":"https://trimad.github.io/post/2017-08-18-kattis-line-them-up/","section":"post","tags":["kattis"],"title":"Kattis Challenge \"Line Them Up\""},{"body":"The Challenge My solution ","link":"https://trimad.github.io/post/2017-08-18-kattis-server/","section":"post","tags":["kattis"],"title":"Kattis Challenge \"Server\""},{"body":"The Challenge My solution ","link":"https://trimad.github.io/post/2017-08-15-kattis-different/","section":"post","tags":["kattis"],"title":"Kattis Challenge \"A Different Problem\""},{"body":"","link":"https://trimad.github.io/tags/javascript/","section":"tags","tags":null,"title":"JavaScript"},{"body":"","link":"https://trimad.github.io/tags/p5.js/","section":"tags","tags":null,"title":"p5.js"},{"body":" click mouse in iframe to generate a new map This sketch maps perlin noise between a value of 0 and 255 across a grid. Values greater than or equal to 100 are \"grass\", values between 75 and 100 are \"sand\", and values less than or equal to 75 are \"water\". Click here to render a fullscreen map Launch the p5.js editor","link":"https://trimad.github.io/post/2017-07-16-simple-2d-perlin-noise/","section":"post","tags":["interactive","JavaScript","p5.js","perlin noise","terrain"],"title":"Simple 2D Terrain Generation Using Perlin Noise"},{"body":"","link":"https://trimad.github.io/tags/terrain/","section":"tags","tags":null,"title":"terrain"},{"body":" View Fullscreen View In p5.js Editor Click on them circles homes","link":"https://trimad.github.io/post/2016-12-13-arrays/","section":"post","tags":["interactive"],"title":"Arrays"},{"body":"","link":"https://trimad.github.io/tags/index/","section":"tags","tags":null,"title":"index"},{"body":"","link":"https://trimad.github.io/categories/maxine/","section":"categories","tags":null,"title":"Maxine"},{"body":"","link":"https://trimad.github.io/categories/nvidia/","section":"categories","tags":null,"title":"NVIDIA"},{"body":"","link":"https://trimad.github.io/tags/sdk/","section":"tags","tags":null,"title":"SDK"},{"body":"","link":"https://trimad.github.io/tags/sound/","section":"tags","tags":null,"title":"sound"},{"body":"This is my tentative workflow for cleaning-up poor audio using the NVIDIA Maxine SDK.\nDownload the Latest Audio Effects SDK NVIDIA Maxine Documentation Find and download a YouTube video using [youtube-dl]({{ site.baseurl }}{% link _posts/2022-04-16-youtube-dl.md %}) 1youtube-dl -f bestaudio https://www.youtube.com/watch?v=XlfcvUtUoOM The Audio Effects SDK only accepts audio that is in .wav format sampled at 8000Hz single-channel, 16000Hz single-channel, or 48000Hz single-channel. This can be resampled using [ffmpeg]({{ site.baseurl }}{% link _posts/2022-04-16-ffmpeg.md %}). Convert a .mp3 file to 8kHz, single-channel PCM: 1ffmpeg -i test.mp3 -ar 8000 -ac 1 input.wav Convert a .m4a file to 16kHz, single-channel PCM: 1ffmpeg -i \u0026#34;Elvis How great thou art 1972 (very impressive)-XlfcvUtUoOM.m4a\u0026#34; -ar 16000 -ac 1 input.wav Convert a .wav file to 48kHz, single-channel PCM: 1ffmpeg -i test.wav -ar 48000 -ac 1 -input.wav Create a config file to use with the effects_demo included with the SDK. Below is an example config \u0026quot;myconfig.txt\u0026quot; that combines two pre-trained models provided by the SDK to reduce reverb, to reduce noise, and to create an upscaled, supperresolution version of the audio. 1# Effect 2effect dereverb_denoiser16k_superres16kto48k 3# Point this to the model file. 4model ..\\..\\bin\\models\\turing\\dereverb_denoiser_16k.trtpkg,..\\..\\bin\\models\\turing\\superres_16kto48k.trtpkg 5# Input file 6input_wav input.wav 7# Effect applied audio data will be saved to this file. 8output_wav output.wav 9# Set to 1 for real time mode i.e. audio data will be processed 10# at same speed like that of an audio input device like 11# microphone. Since the denoising is faster that real time, the 12# processing will be equal to audio file duration. 13real_time 0 14# Intensity Ratio 15intensity_ratio 1.0,1.0 Run the NVIDIA effects_demo with the aforementioned config file. 1effects_demo.exe -c myconfig.txt ","link":"https://trimad.github.io/post/2022-04-20-using-the-nvidia-maxine-audio-effects-sdk-demo/","section":"post","tags":["audio","sound","SDK"],"title":"Using the NVIDIA Maxine Audio Effects SDK Demo"}]