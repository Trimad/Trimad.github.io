<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell on Hugo Grimoire</title><link>https://trimad.github.io/categories/powershell/</link><description>Recent content in PowerShell on Hugo Grimoire</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 16 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://trimad.github.io/categories/powershell/index.xml" rel="self" type="application/rss+xml"/><item><title>Restart IIS Application Pools with PowerShell</title><link>https://trimad.github.io/post/2024-10-16-restart-iis-application/</link><pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2024-10-16-restart-iis-application/</guid><description>
A PowerShell script I put together to stop and start an IIS application pool, with logging.</description></item><item><title>Get Public IP</title><link>https://trimad.github.io/post/2024-06-24-get-public-ip/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2024-06-24-get-public-ip/</guid><description>
Different methods of obtaining the public IP address of a computer.</description></item><item><title>User Lockout Report</title><link>https://trimad.github.io/post/2024-05-30-user-lockout-report/</link><pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2024-05-30-user-lockout-report/</guid><description>
This PowerShell script generates an HTML diagnostics report for user lockouts in the Active Directory. The script imports the Active Directory module and retrieves all user accounts that are not disabled. It fetches password-related properties and calculates the password age and expiration details for each user. The results are filtered, sorted, and converted into an HTML report with CSS styling for better readability. The final HTML report is saved to a file and opened in the default web browser.</description></item><item><title>Take Control</title><link>https://trimad.github.io/post/2024-01-02-take-control/</link><pubDate>Mon, 12 Feb 2024 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2024-01-02-take-control/</guid><description>
Steps to take when Take Control isn't working.</description></item><item><title>PSWindowsUpdate</title><link>https://trimad.github.io/post/2023-10-10-pswindowsupdate/</link><pubDate>Tue, 10 Oct 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-10-10-pswindowsupdate/</guid><description>
Install Windows Updates with the PSWindowsUpdate PowerShell module.</description></item><item><title>Mapping Network Drives Using PowerShell and SID</title><link>https://trimad.github.io/post/2023-07-20-mapped-drives/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-07-20-mapped-drives/</guid><description>
This blog post discusses a PowerShell script that can map a network drive using a Security Identifier (SID), even without being logged in as that user.</description></item><item><title>Join a Workstation to Active Directory with Shell and PowerShell</title><link>https://trimad.github.io/post/2023-07-13-join-active-directory/</link><pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-07-13-join-active-directory/</guid><description>
This post presents one-liner commands using Shell and PowerShell to add a workstation to Active Directory.</description></item><item><title>ACL</title><link>https://trimad.github.io/post/2023-05-02-acl/</link><pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-05-02-acl/</guid><description>
A collection of PowerShell scripts useful for managing the Access Control List (ACL)</description></item><item><title>Hiding users from GAL</title><link>https://trimad.github.io/post/2023-04-05-hiding-users-from-gal/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-04-05-hiding-users-from-gal/</guid><description>
Scripts for hiding users from the Global Address List</description></item><item><title>Windows Remediation</title><link>https://trimad.github.io/post/2023-03-03-windows-remediation/</link><pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-03-03-windows-remediation/</guid><description>
Useful tools for when that got dang Windows just ain't acting right. ðŸ˜¤</description></item><item><title>Microsoft LAPS (Local Administrator Password Solution)</title><link>https://trimad.github.io/post/2023-02-22-laps/</link><pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-22-laps/</guid><description>
Microsoft LAPS (Local Administrator Password Solution) is a tool designed to securely manage local administrator account passwords on Windows domain-joined computers. It automates password generation and rotation, and stores passwords in a secure manner, providing greater control and security over local accounts.</description></item><item><title>MicrosoftTeams PowerShell module</title><link>https://trimad.github.io/post/2023-02-23-microsoftteams/</link><pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-23-microsoftteams/</guid><description>
PowerShell scripts for Microsoft Teams stuff.</description></item><item><title>Force domain controller to sync with AzureAD</title><link>https://trimad.github.io/post/2023-02-09-force-ad-sync/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-09-force-ad-sync/</guid><description>
PowerShell script that forces an AD sync with AzureAD</description></item><item><title>Handling Hacked Accounts and Purging Emails in M365</title><link>https://trimad.github.io/post/2023-02-07-purge-emails/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-07-purge-emails/</guid><description>
This blog post is an evolving work flow for managing hacked accounts using the ExchangeOnlineManagement PowerShell module. I'll share my personal experiences using PowerShell, particularly focusing on remediation techniques like purging phishing emails and securing compromised accounts.</description></item><item><title>Mastering Time with Shell and PowerShell</title><link>https://trimad.github.io/post/2023-02-02-mastering-time-with-shell-and-powershell/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-02-mastering-time-with-shell-and-powershell/</guid><description>
Discover an array of shell and PowerShell commands related to time management, such as checking the last boot-up time, system boot time, and changing the time zone.</description></item><item><title>Dump WiFi Passwords</title><link>https://trimad.github.io/post/2022-04-11-dump-wifi-passwords/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-04-11-dump-wifi-passwords/</guid><description>
&lt;p>This script uses the Windows command-line tool &amp;quot;netsh&amp;quot; to retrieve information about wireless network profiles that have been previously connected to on the computer. It then parses the information to extract the SSID (name) and password for each profile, and outputs that information to a CSV file named &amp;quot;output.csv&amp;quot;. Finally, the script opens the &amp;quot;output.csv&amp;quot; file.&lt;/p>
&lt;p>The script uses the &amp;quot;Invoke-Item&amp;quot; command to open the &amp;quot;output.csv&amp;quot; file, which is the PowerShell command equivalent of double-clicking on a file in Windows Explorer. It opens the file in the default application associated with the .csv file type on the system, typically it will be opened in excel or similar spreadsheet software.&lt;/p></description></item><item><title>Combining PowerShell Cmdlets</title><link>https://trimad.github.io/post/2021-11-17-combining-powershell-cmdlets/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2021-11-17-combining-powershell-cmdlets/</guid><description>
&lt;p>I found myself in a situation where I needed to generate a report to troubleshoot an email issue for a client. Some data could only be retrieved from the &lt;a href="https://docs.microsoft.com/en-us/powershell/exchange/exchange-online-powershell-v2?view=exchange-ps">ExchangeOnlineManagement&lt;/a> module, and other data only from the &lt;a href="https://docs.microsoft.com/en-us/powershell/module/azuread/?view=azureadps-2.0">AzureAD&lt;/a> module. This PowerShell script demonstrates one solution of using both modules in tandem with a nested for-loop that compares the UserPrincipalName with every iteration.&lt;/p>
&lt;script src="https://gist.github.com/Trimad/23d1f60c518fda9b4265edfe0456d8d9.js">&lt;/script></description></item><item><title>Get Group Membership</title><link>https://trimad.github.io/post/2021-09-16-active-directory-group-membership/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2021-09-16-active-directory-group-membership/</guid><description>
&lt;p>Scripts useful for getting group membership. Run them from an admin-elevated Windows PowerShell ISE script pane.&lt;/p>
&lt;h2 id="activedirectory">ActiveDirectory&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-PowerShell" data-lang="PowerShell">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c"># Import the Active Directory PowerShell module to provide cmdlets for AD operations&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nb">Import-Module&lt;/span> &lt;span class="n">ActiveDirectory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c"># Get all Active Directory groups, sorted by name. The -filter * returns all groups.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nv">$groups&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">Get-ADGroup&lt;/span> &lt;span class="n">-filter&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Sort &lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c"># Store the total number of groups for progress tracking&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="nv">$totalgroups&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nv">$groups&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Count&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c"># Initialize a counter for tracking the current group number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="nv">$i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="c"># Initialize an empty array to hold the output data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="nv">$output&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="vm">@&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="c"># Loop through each group&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="k">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$group&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$groups&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="c"># Increment the counter&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="nv">$i&lt;/span>&lt;span class="p">++&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="c"># Display the current processing progress in the console&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="nb">Write-Progress&lt;/span> &lt;span class="n">-activity&lt;/span> &lt;span class="s2">&amp;#34;Processing &lt;/span>&lt;span class="p">$(&lt;/span>&lt;span class="nv">$group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="n">-status&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="s2"> out of &lt;/span>&lt;span class="nv">$totalgroups&lt;/span>&lt;span class="s2"> groups&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="c"># Get the members of the current group&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="nv">$groupMembers&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Get-ADGroupMember&lt;/span> &lt;span class="n">-Identity&lt;/span> &lt;span class="nv">$group&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="c"># Loop through each member of the current group&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="k">foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$member&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$groupMembers&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="c"># Create a new PSObject to hold the details&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="nv">$object&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">new-object&lt;/span> &lt;span class="n">PSObject&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl"> &lt;span class="c"># Add all properties of the group to the object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="nv">$group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">PSObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Properties&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="k">foreach&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="nv">$object&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Add-Member&lt;/span> &lt;span class="n">-MemberType&lt;/span> &lt;span class="n">NoteProperty&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Group_&amp;#34;&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">-Value&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> &lt;span class="c"># Add all properties of the member to the object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> &lt;span class="nv">$member&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">PSObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Properties&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="k">foreach&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> &lt;span class="nv">$object&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Add-Member&lt;/span> &lt;span class="n">-MemberType&lt;/span> &lt;span class="n">NoteProperty&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Member_&amp;#34;&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">-Value&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">41&lt;/span>&lt;span class="cl"> &lt;span class="c"># Add the object to the output array&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">42&lt;/span>&lt;span class="cl"> &lt;span class="nv">$output&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="nv">$object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">43&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">44&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">45&lt;/span>&lt;span class="cl"> &lt;span class="c"># Exit the loop early for debugging purposes after processing 10 groups&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">46&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$i&lt;/span> &lt;span class="o">-eq&lt;/span> &lt;span class="mf">10&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">47&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">48&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">49&lt;/span>&lt;span class="cl">&lt;span class="c"># Define the file path for the output CSV file at the root of the file system&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">50&lt;/span>&lt;span class="cl">&lt;span class="nv">$csvFilePath&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;C:\output.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">51&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">52&lt;/span>&lt;span class="cl">&lt;span class="c"># Export the data in the output array to a CSV file, omitting the type information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">53&lt;/span>&lt;span class="cl">&lt;span class="nv">$output&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Export-Csv&lt;/span> &lt;span class="nv">$csvFilePath&lt;/span> &lt;span class="n">-NoTypeInformation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">54&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">55&lt;/span>&lt;span class="cl">&lt;span class="c"># Open the newly created CSV file in the default CSV file handler (typically Excel or a text editor)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">56&lt;/span>&lt;span class="cl">&lt;span class="nb">Start-Process&lt;/span> &lt;span class="n">-FilePath&lt;/span> &lt;span class="nv">$csvFilePath&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="connect-azuread">Connect-AzureAD&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-PowerShell" data-lang="PowerShell">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c"># Connect to Azure Active Directory (Azure AD)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nb">Connect-AzureAD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c"># Get all Azure AD groups&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nv">$groups&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Get-AzureADGroup&lt;/span> &lt;span class="n">-All&lt;/span> &lt;span class="vm">$true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c"># Initialize an empty array to hold the results&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="nv">$resultsarray&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="vm">@&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c"># Get the total number of groups for progress tracking&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="nv">$totalgroups&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nv">$groups&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Count&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="c"># Initialize a counter for the loop&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="nv">$i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mf">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="c"># For each group in the array of groups&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="k">ForEach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$group&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$groups&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="nv">$i&lt;/span>&lt;span class="p">++&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="c"># Display a progress bar in the console&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="nb">Write-Progress&lt;/span> &lt;span class="n">-activity&lt;/span> &lt;span class="s2">&amp;#34;Processing &lt;/span>&lt;span class="nv">$group&lt;/span>&lt;span class="s2">.DisplayName&amp;#34;&lt;/span> &lt;span class="n">-status&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="s2"> out of &lt;/span>&lt;span class="nv">$totalgroups&lt;/span>&lt;span class="s2"> groups&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="c"># Get all members of the current group&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="nv">$members&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Get-AzureADGroupMember&lt;/span> &lt;span class="n">-ObjectId&lt;/span> &lt;span class="nv">$group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">ObjectId&lt;/span> &lt;span class="n">-All&lt;/span> &lt;span class="vm">$true&lt;/span>Â 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="c"># For each member in the array of members&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="k">ForEach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$member&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$members&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="c"># Create a new PSObject to hold the details&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="nv">$object&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">new-object&lt;/span> &lt;span class="n">PSObject&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl"> &lt;span class="c"># Add properties to the object for the group and member details&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="nv">$group&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">PSObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Properties&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">ForEach-Object&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="nv">$object&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">add-member&lt;/span> &lt;span class="n">-membertype&lt;/span> &lt;span class="n">NoteProperty&lt;/span> &lt;span class="n">-name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Group &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">-Value&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> &lt;span class="nv">$member&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">PSObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Properties&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">ForEach-Object&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> &lt;span class="nv">$object&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">add-member&lt;/span> &lt;span class="n">-membertype&lt;/span> &lt;span class="n">NoteProperty&lt;/span> &lt;span class="n">-name&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Member &amp;#34;&lt;/span> &lt;span class="p">+&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">-Value&lt;/span> &lt;span class="nv">$_&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">Value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl"> &lt;span class="c"># Add the object to the results array&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">41&lt;/span>&lt;span class="cl"> &lt;span class="nv">$resultsarray&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="nv">$object&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">42&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">43&lt;/span>&lt;span class="cl"> &lt;span class="c"># Break after processing 10 groups for debugging. Remove or adjust this for actual run.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">44&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$i&lt;/span> &lt;span class="o">-eq&lt;/span> &lt;span class="mf">10&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">45&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">46&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">47&lt;/span>&lt;span class="cl">&lt;span class="c"># Define the output path for the CSV file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">48&lt;/span>&lt;span class="cl">&lt;span class="nv">$csvFilePath&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;C:\output.csv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">49&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">50&lt;/span>&lt;span class="cl">&lt;span class="c"># Export the results array to a CSV file, without type information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">51&lt;/span>&lt;span class="cl">&lt;span class="nv">$resultsarray&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Export-Csv&lt;/span> &lt;span class="nv">$csvFilePath&lt;/span> &lt;span class="n">-NoTypeInformation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">52&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">53&lt;/span>&lt;span class="cl">&lt;span class="c"># Open the CSV file automatically with the default associated application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">54&lt;/span>&lt;span class="cl">&lt;span class="nb">Start-Process&lt;/span> &lt;span class="n">-FilePath&lt;/span> &lt;span class="nv">$csvFilePath&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Managing Exchange Calendars</title><link>https://trimad.github.io/post/2021-09-16-manage-exchange-online-calendars/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2021-09-16-manage-exchange-online-calendars/</guid><description>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-PowerShell" data-lang="PowerShell">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c">#If not installed already&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nb">Install-Module&lt;/span> &lt;span class="n">ExchangeOnlineManagement&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="c">#Import&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="nb">Import-Module&lt;/span> &lt;span class="n">ExchangeOnlineManagement&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="c">#Connect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nb">Connect-ExchangeOnline&lt;/span> &lt;span class="n">-UserPrincipalName&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">UPN&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c"># Remove AccessRights from a user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nb">Remove-MailboxFolderPermission&lt;/span> &lt;span class="n">-Identity&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="nv">@company&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">Calendar&lt;/span> &lt;span class="n">-User&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="nv">@company&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c"># Grant AccessRights to a user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="nb">Add-MailboxFolderPermission&lt;/span> &lt;span class="n">-Identity&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="nv">@company&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">Calendar&lt;/span> &lt;span class="n">-User&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="nv">@company&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">com&lt;/span> &lt;span class="n">-AccessRights&lt;/span> &lt;span class="n">Owner&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c"># See who currently has folder permissions to a user&amp;#39;s calendar&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="nb">Get-MailboxFolderPermission&lt;/span> &lt;span class="n">-Identity&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="nv">@company&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">\&lt;/span>&lt;span class="n">Calendar&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I haven't tested these since 2021:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-PowerShell" data-lang="PowerShell">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c"># Connect to Exchage&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nb">Import-Module&lt;/span> &lt;span class="n">ExchangeOnlineManagement&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nb">Connect-ExchangeOnline&lt;/span> &lt;span class="n">-UserPrincipalName&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">UPN&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="c"># Get a list of all mailbox aliases&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="c"># Source: https://docs.microsoft.com/en-us/powershell/module/exchange/get-mailbox?view=exchange-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="nv">$users&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">Get-Mailbox&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">Select &lt;/span>&lt;span class="n">-ExpandProperty&lt;/span> &lt;span class="nb">Alias&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="c"># Add AccessRights for a user to all mailboxes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c"># Source: https://docs.microsoft.com/en-us/powershell/module/exchange/add-mailboxfolderpermission?view=exchange-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="k">Foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$user&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$users&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nb">Add-MailboxFolderPermission&lt;/span> &lt;span class="nv">$user&lt;/span>&lt;span class="s2">&amp;#34;:\Calendar&amp;#34;&lt;/span> &lt;span class="n">-User&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">UPN&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">-AccessRights&lt;/span> &lt;span class="n">PublishingEditor&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="c"># Set AccessRights to a user for all mailboxes. You would do this if AccessRights already exist and you need to overwrite them.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="c"># Source: https://docs.microsoft.com/en-us/powershell/module/exchange/set-mailboxfolderpermission?view=exchange-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="k">Foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$user&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$users&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nb">Set-MailboxFolderPermission&lt;/span> &lt;span class="nv">$user&lt;/span>&lt;span class="s2">&amp;#34;:\Calendar&amp;#34;&lt;/span> &lt;span class="n">-User&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">UPN&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">-AccessRights&lt;/span> &lt;span class="n">PublishingEditor&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="c"># Get the current access rights this user has for all mailboxes.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="c"># Source: https://docs.microsoft.com/en-us/powershell/module/exchange/get-mailboxfolderpermission?view=exchange-ps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="k">Foreach&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">$user&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">$users&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nb">Get-MailboxFolderPermission&lt;/span> &lt;span class="nv">$user&lt;/span>&lt;span class="s2">&amp;#34;:\Calendar&amp;#34;&lt;/span> &lt;span class="n">-User&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">UPN&lt;/span>&lt;span class="p">&amp;gt;}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Managing Auto-Expanding Archives</title><link>https://trimad.github.io/post/2021-07-06-manage-auto-expanding-archives/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2021-07-06-manage-auto-expanding-archives/</guid><description>
&lt;p>Managing auto-expanding archives via the &lt;a href="https://docs.microsoft.com/en-us/powershell/exchange/exchange-online-powershell-v2?view=exchange-ps">ExchangeOnlineManagement&lt;/a> module is a pain in my ass. This Github Gist is an aggregate of scripts I've written that allow me to administrate this mailbox feature effectively.&lt;/p>
&lt;script src="https://gist.github.com/Trimad/a5e8441d1cc5767df7826e43a4402eaa.js">&lt;/script></description></item><item><title>Remote Reboot With SMTP Status</title><link>https://trimad.github.io/post/2019-08-28-remote-reboot-with-smtp-status/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2019-08-28-remote-reboot-with-smtp-status/</guid><description>
&lt;p>PowerShell script that reboots a list of computers and emails the status of the machines.&lt;/p>
&lt;script src="https://gist.github.com/Trimad/9f9b779fb4e6a67cabe9bf90d33e2472.js">&lt;/script></description></item><item><title>Remove-AppxPackage</title><link>https://trimad.github.io/post/2019-08-28-remove-appx-packages/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2019-08-28-remove-appx-packages/</guid><description>
&lt;h2>&lt;a href = "https://docs.microsoft.com/en-us/powershell/module/appx/remove-appxpackage?view=windowsserver2022-ps">Microsoft Reference&lt;/a>&lt;/h2>
&lt;script src="https://gist.github.com/Trimad/154058258104c5898218d556945fab94.js">&lt;/script></description></item><item><title>Enable AutoAdminLogon with PowerShell</title><link>https://trimad.github.io/post/2019-08-19-enable-autoadminlogon/</link><pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2019-08-19-enable-autoadminlogon/</guid><description>
&lt;p>This script was written to satisfy a niche case where I temporarily needed a PoS (Point of Sale) to automatically login upon startup using AD credentials.&lt;/p>
&lt;script src="https://gist.github.com/Trimad/d0f3bcb296555e23d53a7196d8df53c9.js">&lt;/script></description></item></channel></rss>