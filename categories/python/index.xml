<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Hugo Grimoire</title><link>https://trimad.github.io/categories/python/</link><description>Recent content in Python on Hugo Grimoire</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 15 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://trimad.github.io/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Decrypt Phishing Emails</title><link>https://trimad.github.io/post/2023-02-15-decrypt-phishing-emails/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-15-decrypt-phishing-emails/</guid><description>
I've notice that a lot of phishing emails use hexadecimal strings to obfuscate their JavaScript. These are some Python scripts useful for identifying where form actions are POSTing to.
Convert HEX strings 1import re 2 3def decode_hex(match): 4 hex_str = match.group(0)[2:] 5 decoded = bytes.fromhex(hex_str).decode(&amp;#39;ascii&amp;#39;) 6 return decoded 7 8with open(&amp;#39;input.html&amp;#39;, &amp;#39;r&amp;#39;) as file: 9 content = file.read() 10 decoded_content = re.sub(r&amp;#39;\\x[0-9a-fA-F]{2}&amp;#39;, decode_hex, content) 11 12with open(&amp;#39;output.html&amp;#39;, &amp;#39;w&amp;#39;) as file: 13 file.</description></item></channel></rss>