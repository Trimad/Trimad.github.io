<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on Hugo Grimoire</title><link>https://trimad.github.io/categories/javascript/</link><description>Recent content in JavaScript on Hugo Grimoire</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 11 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://trimad.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Gmail Photo Downloader</title><link>https://trimad.github.io/post/2023-09-11-picture-auto-downloader/</link><pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-09-11-picture-auto-downloader/</guid><description>
This is a Google Apps Script I wrote that automatically downloads pictures embedded in a daily email I receive from my son's daycare to a Google Drive folder.</description></item><item><title>Disco Ball</title><link>https://trimad.github.io/post/2023-08-24-disco-ball/</link><pubDate>Thu, 24 Aug 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-08-24-disco-ball/</guid><description>
Wife needed a black and white PNG/SVG of a Disco Ball. Yep.</description></item><item><title>Yahoo Finance API via RapidAPI</title><link>https://trimad.github.io/post/2023-05-11-rapidapi/</link><pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-05-11-rapidapi/</guid><description>
This program loads comma-separated stock symbols from a file named `symbols.txt` and then queries the Yahoo Finance API using a RapidAPI endpoint. It retrieves prices for every 60 minutes on a max time window.</description></item><item><title>Key Event Tester</title><link>https://trimad.github.io/post/2023-05-08-keycode-event-test/</link><pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-05-08-keycode-event-test/</guid><description>
This diagnostic tool allows you to type into a text area and logs keyboard events, providing valuable information such as key codes, key names, and modifier keys (Alt, Ctrl, Shift, Meta). As you interact with the text area, the captured event data will be displayed in real-time. This can be particularly useful for debugging and understanding the nuances of keyboard events in your application.</description></item><item><title>Random Password Generator</title><link>https://trimad.github.io/post/2023-03-22-random-password-generator/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-03-22-random-password-generator/</guid><description>
Randomly generated passwords. Refresh the page for new passwords.</description></item><item><title>Decode Phishing Emails</title><link>https://trimad.github.io/post/2023-02-15-decode-phishing-emails/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-15-decode-phishing-emails/</guid><description>
I've notice that a lot of phishing emails use hexadecimal strings to obfuscate their JavaScript. These are some Python scripts useful for identifying where form actions are POSTing to.</description></item><item><title>Stable Diffusion Scripts</title><link>https://trimad.github.io/post/2023-02-05-stable-diffusion/</link><pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2023-02-05-stable-diffusion/</guid><description>
Stable Diffusion is an image generation technique that uses a diffusion process to iteratively generate images. It starts with a noise image and applies a series of transformations to it, where each transformation adds a little bit of noise to the image. These transformations are repeated over multiple time steps, and the amount of noise added is gradually decreased over time. This process smooths out the noise and generates a high-quality image. The stability of the diffusion process is maintained by scaling the added noise based on the image's current state, preventing the image from diverging or collapsing into a uniform color. Stable Diffusion is a powerful and versatile image generation technique that can produce realistic, high-resolution images with fine details and a wide range of styles.</description></item><item><title>Archimedean Spiral</title><link>https://trimad.github.io/post/2022-05-04-archimedean-spiral/</link><pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2022-05-04-archimedean-spiral/</guid><description>
Edit This Sketch
This sketch draws an Archimedean Spiral using polar coordinates. If the &amp;quot;EXPORT&amp;quot; variable is true, the sketch will spit-out an SVG file of the drawn spiral. My motivation for making this was so I could cut-out a spiral with my wife's Cricut Maker and hang something more interesting above my son's bassinet than empty white ceiling.
Example SVG files
{: width=&amp;quot;auto&amp;quot; height=&amp;quot;auto&amp;quot; }
{: width=&amp;quot;auto&amp;quot; height=&amp;quot;auto&amp;quot; }</description></item><item><title>Daily Donation Report</title><link>https://trimad.github.io/post/2019-08-25-daily-donation-report/</link><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2019-08-25-daily-donation-report/</guid><description>
This Google Apps Script aggregates data submitted by Google Forms, puts it in .xlsx format and sends it in an HTML formatted email.</description></item><item><title>Fridge Magnet Simulator</title><link>https://trimad.github.io/post/2018-11-16-fridge-magnet-simulator/</link><pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2018-11-16-fridge-magnet-simulator/</guid><description>
This is a virtual simulation of the magnets on my girlfriend's fridge.</description></item><item><title>Orbiting Pixels Utility</title><link>https://trimad.github.io/post/2018-11-12-orbiting-pixels-utility/</link><pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2018-11-12-orbiting-pixels-utility/</guid><description>
This program works by creating a grid of evenly-spaced points. Each points has a corresponding object that rotates about that point and is assigned characteristics such as rotation radius, shape, and color that corresponds to the same x and y position of a source image. The phase of each object's rotation to the brightness value of the source image's corresponding pixel. This project taught me a lot about JavaScript and made for some fun animations.</description></item><item><title>Ulam Spiral</title><link>https://trimad.github.io/post/2018-05-17-ulam-sprial/</link><pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2018-05-17-ulam-sprial/</guid><description>
Launch this sketch is a new window (recommended)
Launch p5.js web editor
The Ulam Spiral or prime spiral is a graphical depiction of the set of prime numbers, devised by mathematician Stanislaw Ulam in 1963 and popularized in Martin Gardner's Mathematical Games column in Scientific American a short time later. It is constructed by writing the positive integers in a square spiral and specially marking the prime numbers.
What I've done differently is allowed for iterating every integer in the grid forwards or backwards to search for long, connected diaganal lines of prime numbers in the grid.</description></item><item><title>Merge Sort using WEBGL</title><link>https://trimad.github.io/post/2018-02-05-merge-sort/</link><pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2018-02-05-merge-sort/</guid><description>
This is a (perhaps overkill) 3D WEBGL visualization of Merge Sort using the WEBGL rendering mode.</description></item><item><title>10PRINT Image Filter</title><link>https://trimad.github.io/post/2018-01-31-10print-image-filter/</link><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2018-01-31-10print-image-filter/</guid><description>
This sketch is a browser-based image filtering utility inspired by 10PRINT. The UI allows users to produce faithful looking interpretations of 10PRINT, 10PRINT patterns that look hand-drawn, and users can even create an explosive shit-mess of scribbles, if they so wish.
Launch this sketch is a new window (recommended)
Launch p5.js web editor</description></item><item><title>Insertion Sort using WEBGL</title><link>https://trimad.github.io/post/2018-01-28-insertion-sort/</link><pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2018-01-28-insertion-sort/</guid><description>
This is a (perhaps overkill) 3D WEBGL visualization of Insertion Sort using the WEBGL rendering mode.</description></item><item><title>Simple 2D Terrain Generation Using Perlin Noise</title><link>https://trimad.github.io/post/2017-07-16-simple-2d-perlin-noise/</link><pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2017-07-16-simple-2d-perlin-noise/</guid><description>
This sketch maps perlin noise between a value of 0 and 255 across a grid. Values greater than or equal to 100 are "grass", values between 75 and 100 are "sand", and values less than or equal to 75 are "water".</description></item><item><title>Arrays</title><link>https://trimad.github.io/post/2016-12-13-arrays/</link><pubDate>Tue, 13 Dec 2016 00:00:00 +0000</pubDate><guid>https://trimad.github.io/post/2016-12-13-arrays/</guid><description>
This is something I made when I was learning about Arrays of Objects.</description></item></channel></rss>