<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>domain on Hugo Grimoire</title>
    <link>https://trimad.github.io/tags/domain/</link>
    <description>Recent content in domain on Hugo Grimoire</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 16 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://trimad.github.io/tags/domain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get Group Membership</title>
      <link>https://trimad.github.io/post/2021-09-16-active-directory-group-membership/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2021-09-16-active-directory-group-membership/</guid>
      <description>
        
          
            Scripts useful for getting group membership. Run them from an admin-elevated Windows PowerShell ISE script pane.
ActiveDirectory 1# Import the Active Directory PowerShell module to provide cmdlets for AD operations 2Import-Module ActiveDirectory 3 4# Get all Active Directory groups, sorted by name. The -filter * returns all groups. 5$groups = (Get-ADGroup -filter * | Sort Name) 6 7# Store the total number of groups for progress tracking 8$totalgroups = $groups.Count 9 10# Initialize a counter for tracking the current group number 11$i = 1 12 13# Initialize an empty array to hold the output data 14$output = @() 15 16# Loop through each group 17foreach ($group in $groups) { 18 # Increment the counter 19 $i++ 20 # Display the current processing progress in the console 21 Write-Progress -activity &amp;#34;Processing $($group.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Enable AutoAdminLogon with PowerShell</title>
      <link>https://trimad.github.io/post/2019-08-19-enable-autoadminlogon/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://trimad.github.io/post/2019-08-19-enable-autoadminlogon/</guid>
      <description>
        
          
            This script was written to satisfy a niche case where I temporarily needed a PoS (Point of Sale) to automatically login upon startup using AD credentials.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
